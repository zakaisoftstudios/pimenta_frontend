"use strict";
var __makeTemplateObject = (this && this.__makeTemplateObject) || function (cooked, raw) {
    if (Object.defineProperty) { Object.defineProperty(cooked, "raw", { value: raw }); } else { cooked.raw = raw; }
    return cooked;
};
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
var media_1 = require("../media");
var map_1 = __importDefault(require("./map"));
var resolve_1 = __importDefault(require("./resolve"));
exports.default = (function (valueMap, renderer, theme) {
    var breakpointsMap = media_1.breakpoints(theme);
    var breakpointValues = map_1.default(valueMap, theme) || {};
    var breakpointKeys = Object.keys(breakpointValues).filter(function (breakpointKey) {
        return breakpointsMap[breakpointKey] != null &&
            typeof breakpointValues[breakpointKey] === "object";
    });
    var propertyKeys = Object.keys(valueMap).filter(function (propertyKey) { return renderer[propertyKey] != null; });
    var previousValues = {};
    var count = 0;
    return breakpointKeys.reduce(function (acc, breakpointKey) {
        count++;
        return (acc + resolve_1.default(breakpointsMap, breakpointKey)(templateObject_1 || (templateObject_1 = __makeTemplateObject(["\n        ", "\n      "], ["\n        ",
            "\n      "])), propertyKeys.reduce(function (acc2, propertyKey) {
            var value = breakpointValues[breakpointKey] &&
                breakpointValues[breakpointKey][propertyKey];
            if (count > 1 && previousValues[propertyKey] === value) {
                return acc2;
            }
            else {
                previousValues[propertyKey] = value;
                return acc2 + renderer[propertyKey](value);
            }
        }, "")));
    }, "");
});
var templateObject_1;
//# sourceMappingURL=render.js.map