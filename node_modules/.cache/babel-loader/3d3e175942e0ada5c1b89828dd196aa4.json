{"ast":null,"code":"import _toConsumableArray from \"/home/zakaisoftstudios/Desktop/railsprojects/pimenta-group/pimenta-group-nextstep_frontend_react-28a5c2a2a4fe/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _objectSpread from \"/home/zakaisoftstudios/Desktop/railsprojects/pimenta-group/pimenta-group-nextstep_frontend_react-28a5c2a2a4fe/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nimport _asyncToGenerator from \"/home/zakaisoftstudios/Desktop/railsprojects/pimenta-group/pimenta-group-nextstep_frontend_react-28a5c2a2a4fe/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"/home/zakaisoftstudios/Desktop/railsprojects/pimenta-group/pimenta-group-nextstep_frontend_react-28a5c2a2a4fe/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/zakaisoftstudios/Desktop/railsprojects/pimenta-group/pimenta-group-nextstep_frontend_react-28a5c2a2a4fe/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"/home/zakaisoftstudios/Desktop/railsprojects/pimenta-group/pimenta-group-nextstep_frontend_react-28a5c2a2a4fe/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _createSuper from \"/home/zakaisoftstudios/Desktop/railsprojects/pimenta-group/pimenta-group-nextstep_frontend_react-28a5c2a2a4fe/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";\nvar _jsxFileName = \"/home/zakaisoftstudios/Desktop/railsprojects/pimenta-group/pimenta-group-nextstep_frontend_react-28a5c2a2a4fe/src/containers/Chat/Chat.js\";\nfunction _regeneratorRuntime() { \"use strict\"; /*! regenerator-runtime -- Copyright (c) 2014-present, Facebook, Inc. -- license (MIT): https://github.com/facebook/regenerator/blob/main/LICENSE */ _regeneratorRuntime = function _regeneratorRuntime() { return exports; }; var exports = {}, Op = Object.prototype, hasOwn = Op.hasOwnProperty, defineProperty = Object.defineProperty || function (obj, key, desc) { obj[key] = desc.value; }, $Symbol = \"function\" == typeof Symbol ? Symbol : {}, iteratorSymbol = $Symbol.iterator || \"@@iterator\", asyncIteratorSymbol = $Symbol.asyncIterator || \"@@asyncIterator\", toStringTagSymbol = $Symbol.toStringTag || \"@@toStringTag\"; function define(obj, key, value) { return Object.defineProperty(obj, key, { value: value, enumerable: !0, configurable: !0, writable: !0 }), obj[key]; } try { define({}, \"\"); } catch (err) { define = function define(obj, key, value) { return obj[key] = value; }; } function wrap(innerFn, outerFn, self, tryLocsList) { var protoGenerator = outerFn && outerFn.prototype instanceof Generator ? outerFn : Generator, generator = Object.create(protoGenerator.prototype), context = new Context(tryLocsList || []); return defineProperty(generator, \"_invoke\", { value: makeInvokeMethod(innerFn, self, context) }), generator; } function tryCatch(fn, obj, arg) { try { return { type: \"normal\", arg: fn.call(obj, arg) }; } catch (err) { return { type: \"throw\", arg: err }; } } exports.wrap = wrap; var ContinueSentinel = {}; function Generator() {} function GeneratorFunction() {} function GeneratorFunctionPrototype() {} var IteratorPrototype = {}; define(IteratorPrototype, iteratorSymbol, function () { return this; }); var getProto = Object.getPrototypeOf, NativeIteratorPrototype = getProto && getProto(getProto(values([]))); NativeIteratorPrototype && NativeIteratorPrototype !== Op && hasOwn.call(NativeIteratorPrototype, iteratorSymbol) && (IteratorPrototype = NativeIteratorPrototype); var Gp = GeneratorFunctionPrototype.prototype = Generator.prototype = Object.create(IteratorPrototype); function defineIteratorMethods(prototype) { [\"next\", \"throw\", \"return\"].forEach(function (method) { define(prototype, method, function (arg) { return this._invoke(method, arg); }); }); } function AsyncIterator(generator, PromiseImpl) { function invoke(method, arg, resolve, reject) { var record = tryCatch(generator[method], generator, arg); if (\"throw\" !== record.type) { var result = record.arg, value = result.value; return value && \"object\" == typeof value && hasOwn.call(value, \"__await\") ? PromiseImpl.resolve(value.__await).then(function (value) { invoke(\"next\", value, resolve, reject); }, function (err) { invoke(\"throw\", err, resolve, reject); }) : PromiseImpl.resolve(value).then(function (unwrapped) { result.value = unwrapped, resolve(result); }, function (error) { return invoke(\"throw\", error, resolve, reject); }); } reject(record.arg); } var previousPromise; defineProperty(this, \"_invoke\", { value: function value(method, arg) { function callInvokeWithMethodAndArg() { return new PromiseImpl(function (resolve, reject) { invoke(method, arg, resolve, reject); }); } return previousPromise = previousPromise ? previousPromise.then(callInvokeWithMethodAndArg, callInvokeWithMethodAndArg) : callInvokeWithMethodAndArg(); } }); } function makeInvokeMethod(innerFn, self, context) { var state = \"suspendedStart\"; return function (method, arg) { if (\"executing\" === state) throw new Error(\"Generator is already running\"); if (\"completed\" === state) { if (\"throw\" === method) throw arg; return doneResult(); } for (context.method = method, context.arg = arg;;) { var delegate = context.delegate; if (delegate) { var delegateResult = maybeInvokeDelegate(delegate, context); if (delegateResult) { if (delegateResult === ContinueSentinel) continue; return delegateResult; } } if (\"next\" === context.method) context.sent = context._sent = context.arg;else if (\"throw\" === context.method) { if (\"suspendedStart\" === state) throw state = \"completed\", context.arg; context.dispatchException(context.arg); } else \"return\" === context.method && context.abrupt(\"return\", context.arg); state = \"executing\"; var record = tryCatch(innerFn, self, context); if (\"normal\" === record.type) { if (state = context.done ? \"completed\" : \"suspendedYield\", record.arg === ContinueSentinel) continue; return { value: record.arg, done: context.done }; } \"throw\" === record.type && (state = \"completed\", context.method = \"throw\", context.arg = record.arg); } }; } function maybeInvokeDelegate(delegate, context) { var method = delegate.iterator[context.method]; if (undefined === method) { if (context.delegate = null, \"throw\" === context.method) { if (delegate.iterator.return && (context.method = \"return\", context.arg = undefined, maybeInvokeDelegate(delegate, context), \"throw\" === context.method)) return ContinueSentinel; context.method = \"throw\", context.arg = new TypeError(\"The iterator does not provide a 'throw' method\"); } return ContinueSentinel; } var record = tryCatch(method, delegate.iterator, context.arg); if (\"throw\" === record.type) return context.method = \"throw\", context.arg = record.arg, context.delegate = null, ContinueSentinel; var info = record.arg; return info ? info.done ? (context[delegate.resultName] = info.value, context.next = delegate.nextLoc, \"return\" !== context.method && (context.method = \"next\", context.arg = undefined), context.delegate = null, ContinueSentinel) : info : (context.method = \"throw\", context.arg = new TypeError(\"iterator result is not an object\"), context.delegate = null, ContinueSentinel); } function pushTryEntry(locs) { var entry = { tryLoc: locs[0] }; 1 in locs && (entry.catchLoc = locs[1]), 2 in locs && (entry.finallyLoc = locs[2], entry.afterLoc = locs[3]), this.tryEntries.push(entry); } function resetTryEntry(entry) { var record = entry.completion || {}; record.type = \"normal\", delete record.arg, entry.completion = record; } function Context(tryLocsList) { this.tryEntries = [{ tryLoc: \"root\" }], tryLocsList.forEach(pushTryEntry, this), this.reset(!0); } function values(iterable) { if (iterable) { var iteratorMethod = iterable[iteratorSymbol]; if (iteratorMethod) return iteratorMethod.call(iterable); if (\"function\" == typeof iterable.next) return iterable; if (!isNaN(iterable.length)) { var i = -1, next = function next() { for (; ++i < iterable.length;) { if (hasOwn.call(iterable, i)) return next.value = iterable[i], next.done = !1, next; } return next.value = undefined, next.done = !0, next; }; return next.next = next; } } return { next: doneResult }; } function doneResult() { return { value: undefined, done: !0 }; } return GeneratorFunction.prototype = GeneratorFunctionPrototype, defineProperty(Gp, \"constructor\", { value: GeneratorFunctionPrototype, configurable: !0 }), defineProperty(GeneratorFunctionPrototype, \"constructor\", { value: GeneratorFunction, configurable: !0 }), GeneratorFunction.displayName = define(GeneratorFunctionPrototype, toStringTagSymbol, \"GeneratorFunction\"), exports.isGeneratorFunction = function (genFun) { var ctor = \"function\" == typeof genFun && genFun.constructor; return !!ctor && (ctor === GeneratorFunction || \"GeneratorFunction\" === (ctor.displayName || ctor.name)); }, exports.mark = function (genFun) { return Object.setPrototypeOf ? Object.setPrototypeOf(genFun, GeneratorFunctionPrototype) : (genFun.__proto__ = GeneratorFunctionPrototype, define(genFun, toStringTagSymbol, \"GeneratorFunction\")), genFun.prototype = Object.create(Gp), genFun; }, exports.awrap = function (arg) { return { __await: arg }; }, defineIteratorMethods(AsyncIterator.prototype), define(AsyncIterator.prototype, asyncIteratorSymbol, function () { return this; }), exports.AsyncIterator = AsyncIterator, exports.async = function (innerFn, outerFn, self, tryLocsList, PromiseImpl) { void 0 === PromiseImpl && (PromiseImpl = Promise); var iter = new AsyncIterator(wrap(innerFn, outerFn, self, tryLocsList), PromiseImpl); return exports.isGeneratorFunction(outerFn) ? iter : iter.next().then(function (result) { return result.done ? result.value : iter.next(); }); }, defineIteratorMethods(Gp), define(Gp, toStringTagSymbol, \"Generator\"), define(Gp, iteratorSymbol, function () { return this; }), define(Gp, \"toString\", function () { return \"[object Generator]\"; }), exports.keys = function (val) { var object = Object(val), keys = []; for (var key in object) { keys.push(key); } return keys.reverse(), function next() { for (; keys.length;) { var key = keys.pop(); if (key in object) return next.value = key, next.done = !1, next; } return next.done = !0, next; }; }, exports.values = values, Context.prototype = { constructor: Context, reset: function reset(skipTempReset) { if (this.prev = 0, this.next = 0, this.sent = this._sent = undefined, this.done = !1, this.delegate = null, this.method = \"next\", this.arg = undefined, this.tryEntries.forEach(resetTryEntry), !skipTempReset) for (var name in this) { \"t\" === name.charAt(0) && hasOwn.call(this, name) && !isNaN(+name.slice(1)) && (this[name] = undefined); } }, stop: function stop() { this.done = !0; var rootRecord = this.tryEntries[0].completion; if (\"throw\" === rootRecord.type) throw rootRecord.arg; return this.rval; }, dispatchException: function dispatchException(exception) { if (this.done) throw exception; var context = this; function handle(loc, caught) { return record.type = \"throw\", record.arg = exception, context.next = loc, caught && (context.method = \"next\", context.arg = undefined), !!caught; } for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i], record = entry.completion; if (\"root\" === entry.tryLoc) return handle(\"end\"); if (entry.tryLoc <= this.prev) { var hasCatch = hasOwn.call(entry, \"catchLoc\"), hasFinally = hasOwn.call(entry, \"finallyLoc\"); if (hasCatch && hasFinally) { if (this.prev < entry.catchLoc) return handle(entry.catchLoc, !0); if (this.prev < entry.finallyLoc) return handle(entry.finallyLoc); } else if (hasCatch) { if (this.prev < entry.catchLoc) return handle(entry.catchLoc, !0); } else { if (!hasFinally) throw new Error(\"try statement without catch or finally\"); if (this.prev < entry.finallyLoc) return handle(entry.finallyLoc); } } } }, abrupt: function abrupt(type, arg) { for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i]; if (entry.tryLoc <= this.prev && hasOwn.call(entry, \"finallyLoc\") && this.prev < entry.finallyLoc) { var finallyEntry = entry; break; } } finallyEntry && (\"break\" === type || \"continue\" === type) && finallyEntry.tryLoc <= arg && arg <= finallyEntry.finallyLoc && (finallyEntry = null); var record = finallyEntry ? finallyEntry.completion : {}; return record.type = type, record.arg = arg, finallyEntry ? (this.method = \"next\", this.next = finallyEntry.finallyLoc, ContinueSentinel) : this.complete(record); }, complete: function complete(record, afterLoc) { if (\"throw\" === record.type) throw record.arg; return \"break\" === record.type || \"continue\" === record.type ? this.next = record.arg : \"return\" === record.type ? (this.rval = this.arg = record.arg, this.method = \"return\", this.next = \"end\") : \"normal\" === record.type && afterLoc && (this.next = afterLoc), ContinueSentinel; }, finish: function finish(finallyLoc) { for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i]; if (entry.finallyLoc === finallyLoc) return this.complete(entry.completion, entry.afterLoc), resetTryEntry(entry), ContinueSentinel; } }, catch: function _catch(tryLoc) { for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i]; if (entry.tryLoc === tryLoc) { var record = entry.completion; if (\"throw\" === record.type) { var thrown = record.arg; resetTryEntry(entry); } return thrown; } } throw new Error(\"illegal catch attempt\"); }, delegateYield: function delegateYield(iterable, resultName, nextLoc) { return this.delegate = { iterator: values(iterable), resultName: resultName, nextLoc: nextLoc }, \"next\" === this.method && (this.arg = undefined), ContinueSentinel; } }, exports; }\nimport { Trans } from \"@lingui/react\";\nimport React from 'react';\nimport * as ConversationsAPI from '../../services/api/conversations';\nimport * as ChatNotificationsAPI from '../../services/api/chatNotifications';\nimport Chat from '../../atomic/organisms/Chat';\nimport ChatConversations from '../../atomic/organisms/ChatConversations';\nimport ChatMessages from '../../atomic/organisms/ChatMessages';\nimport * as MessagesAPI from '../../services/api/messages';\nimport { connect } from 'react-redux';\nimport { profileTypes } from '../../constants/profileTypes';\nimport ActionModal from '../../atomic/molecules/ActionModal';\nvar ChatContainer = /*#__PURE__*/function (_React$Component) {\n  _inherits(ChatContainer, _React$Component);\n  var _super = _createSuper(ChatContainer);\n  function ChatContainer() {\n    var _this;\n    _classCallCheck(this, ChatContainer);\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n    _this = _super.call.apply(_super, [this].concat(args));\n    _this.state = {\n      conversations: [],\n      loading: true,\n      loadingMessages: false,\n      activeConversation: null,\n      newMessage: '',\n      conversationToRemove: null,\n      confirmRemove: false,\n      partnerProfileToShow: null\n    };\n    _this.getBackendResource = function () {\n      var profileType = _this.props.profileType;\n      return profileTypes[profileType].backendResource;\n    };\n    _this.handleCloseConversation = function () {\n      _this.setState({\n        activeConversation: null\n      });\n    };\n    _this.handleOpenConversation = function (conversationId) {\n      return /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee() {\n        var activeConversation, backendResource, messages;\n        return _regeneratorRuntime().wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _this.setState({\n                  loadingMessages: true\n                });\n                activeConversation = _this.state.conversations.find(function (conversation) {\n                  return conversation.id === conversationId;\n                });\n                backendResource = _this.getBackendResource();\n                _context.next = 5;\n                return MessagesAPI.getAll(conversationId, backendResource);\n              case 5:\n                messages = _context.sent;\n                _this.setState({\n                  activeConversation: _objectSpread(_objectSpread({}, activeConversation), {}, {\n                    messages: messages\n                  }),\n                  loadingMessages: false\n                }, function () {\n                  return _this.scrollToChatBottom();\n                });\n              case 7:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }));\n    };\n    _this.handleTypeMessage = function (event) {\n      _this.setState({\n        newMessage: event.currentTarget.value\n      });\n    };\n    _this.handleSendMessage = /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee2() {\n      var _this$state, newMessage, conversationId, message;\n      return _regeneratorRuntime().wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              _this$state = _this.state, newMessage = _this$state.newMessage, conversationId = _this$state.activeConversation.id;\n              if (!(newMessage.length === 0)) {\n                _context2.next = 3;\n                break;\n              }\n              return _context2.abrupt(\"return\");\n            case 3:\n              _context2.next = 5;\n              return MessagesAPI.post(conversationId, newMessage);\n            case 5:\n              message = _context2.sent;\n              if (!message.error) _this.addMessage(message);\n            case 7:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2);\n    }));\n    _this.handleReceiveMessage = function (newMessage) {\n      if (newMessage.sender_user_id !== _this.state.activeConversation.owner_user_id) _this.addMessage(newMessage);\n    };\n    _this.addMessage = function (newMessage) {\n      var _this$state2 = _this.state,\n        activeConversation = _this$state2.activeConversation,\n        conversations = _this$state2.conversations;\n      var withNewMessage = _objectSpread(_objectSpread({}, activeConversation), {}, {\n        messages: [].concat(_toConsumableArray(activeConversation.messages), [newMessage])\n      });\n      _this.setState({\n        activeConversation: withNewMessage,\n        newMessage: ''\n      }, function () {\n        return _this.scrollToChatBottom('smooth');\n      });\n    };\n    _this.handleRemoveConversation = function (conversationToRemove) {\n      return function () {\n        return _this.setState({\n          conversationToRemove: conversationToRemove,\n          confirmRemove: true\n        });\n      };\n    };\n    _this.handleRemoveConversationCancel = function () {\n      return _this.setState({\n        conversationToRemove: null,\n        confirmRemove: false\n      });\n    };\n    _this.handleRemoveConvesationConfirm = /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee3() {\n      var _this$state3, conversationToRemove, conversations, backendResource, res, newConversations;\n      return _regeneratorRuntime().wrap(function _callee3$(_context3) {\n        while (1) {\n          switch (_context3.prev = _context3.next) {\n            case 0:\n              _this$state3 = _this.state, conversationToRemove = _this$state3.conversationToRemove, conversations = _this$state3.conversations;\n              backendResource = _this.getBackendResource();\n              _this.setState({\n                confirmRemove: false\n              });\n              _context3.next = 5;\n              return ConversationsAPI.destroy(conversationToRemove.id, backendResource);\n            case 5:\n              res = _context3.sent;\n              newConversations = conversations.filter(function (conversation) {\n                return conversation.id !== conversationToRemove.id;\n              });\n              _this.setState({\n                conversations: newConversations\n              });\n            case 8:\n            case \"end\":\n              return _context3.stop();\n          }\n        }\n      }, _callee3);\n    }));\n    _this.handleChatBottomRef = function (el) {\n      return _this.chatBottomEl = el;\n    };\n    _this.scrollToChatBottom = function (behavior) {\n      _this.chatBottomEl.scrollIntoView({\n        behavior: behavior\n      });\n    };\n    _this.handleShowPartnerProfile = function (partnerProfileToShow) {\n      return function () {\n        _this.setState({\n          partnerProfileToShow: partnerProfileToShow\n        });\n      };\n    };\n    _this.handleLeavePartnerProfile = function () {\n      return _this.setState({\n        partnerProfileToShow: null\n      });\n    };\n    return _this;\n  }\n  _createClass(ChatContainer, [{\n    key: \"componentDidMount\",\n    value: function () {\n      var _componentDidMount = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee4() {\n        var backendResource, conversations;\n        return _regeneratorRuntime().wrap(function _callee4$(_context4) {\n          while (1) {\n            switch (_context4.prev = _context4.next) {\n              case 0:\n                backendResource = this.getBackendResource();\n                _context4.next = 3;\n                return ConversationsAPI.getAll(backendResource);\n              case 3:\n                conversations = _context4.sent;\n                ChatNotificationsAPI.destroy();\n                if (!conversations.error) this.setState({\n                  conversations: conversations,\n                  loading: false\n                });\n              case 6:\n              case \"end\":\n                return _context4.stop();\n            }\n          }\n        }, _callee4, this);\n      }));\n      function componentDidMount() {\n        return _componentDidMount.apply(this, arguments);\n      }\n      return componentDidMount;\n    }()\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$state4 = this.state,\n        loading = _this$state4.loading,\n        loadingMessages = _this$state4.loadingMessages,\n        conversations = _this$state4.conversations,\n        activeConversation = _this$state4.activeConversation,\n        newMessage = _this$state4.newMessage,\n        confirmRemove = _this$state4.confirmRemove,\n        partnerProfileToShow = _this$state4.partnerProfileToShow;\n      if (partnerProfileToShow) {\n        var profileType = this.props.profileType;\n        var PartnerComponent = profileTypes[profileType].chatPartnerComponent;\n        return /*#__PURE__*/React.createElement(PartnerComponent, {\n          profile: partnerProfileToShow,\n          ready: true,\n          canEdit: false,\n          handleReturn: this.handleLeavePartnerProfile,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 164,\n            columnNumber: 9\n          }\n        });\n      }\n      var conversationsComponent = /*#__PURE__*/React.createElement(ChatConversations, {\n        conversations: conversations,\n        handleOpenConversation: this.handleOpenConversation,\n        handleRemoveConversation: this.handleRemoveConversation,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 174,\n          columnNumber: 7\n        }\n      });\n      var activeConversationMessagesComponent = /*#__PURE__*/React.createElement(ChatMessages, {\n        conversation: activeConversation,\n        loadingMessages: loadingMessages,\n        newMessage: newMessage,\n        handleTypeMessage: this.handleTypeMessage,\n        handleSendMessage: this.handleSendMessage,\n        handleReceiveMessage: this.handleReceiveMessage,\n        handleChatBottomRef: this.handleChatBottomRef,\n        handleReturn: this.handleCloseConversation,\n        handleShowPartnerProfile: this.handleShowPartnerProfile,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 182,\n          columnNumber: 7\n        }\n      });\n      return /*#__PURE__*/React.createElement(React.Fragment, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 196,\n          columnNumber: 7\n        }\n      }, confirmRemove && /*#__PURE__*/React.createElement(ActionModal, {\n        handleClose: this.handleRemoveConversationCancel,\n        content: /*#__PURE__*/React.createElement(\"div\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 201,\n            columnNumber: 15\n          }\n        }, /*#__PURE__*/React.createElement(Trans, {\n          id: \"Do you want to remove the conversation? The match will be undone and all the likes and hunts between the party will be removed.\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 202,\n            columnNumber: 17\n          }\n        })),\n        actions: [{\n          name: /*#__PURE__*/React.createElement(Trans, {\n            id: \"Confirm\",\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 211,\n              columnNumber: 23\n            }\n          }),\n          handler: this.handleRemoveConvesationConfirm\n        }],\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 198,\n          columnNumber: 11\n        }\n      }), /*#__PURE__*/React.createElement(Chat, {\n        loading: loading,\n        loadingMessages: loadingMessages,\n        activeConversation: activeConversation,\n        conversationsComponent: conversationsComponent,\n        activeConversationMessagesComponent: activeConversationMessagesComponent,\n        hasConversations: conversations.length > 0,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 218,\n          columnNumber: 9\n        }\n      }));\n    }\n  }]);\n  return ChatContainer;\n}(React.Component);\nvar mapStateToProps = function mapStateToProps(_ref4) {\n  var _ref4$auth = _ref4.auth,\n    userId = _ref4$auth.userId,\n    profileType = _ref4$auth.profileType;\n  return {\n    userId: userId,\n    profileType: profileType\n  };\n};\nexport default connect(mapStateToProps)(ChatContainer);","map":{"version":3,"names":["React","ConversationsAPI","ChatNotificationsAPI","Chat","ChatConversations","ChatMessages","MessagesAPI","connect","profileTypes","ActionModal","ChatContainer","state","conversations","loading","loadingMessages","activeConversation","newMessage","conversationToRemove","confirmRemove","partnerProfileToShow","getBackendResource","profileType","props","backendResource","handleCloseConversation","setState","handleOpenConversation","conversationId","find","conversation","id","getAll","messages","scrollToChatBottom","handleTypeMessage","event","currentTarget","value","handleSendMessage","length","post","message","error","addMessage","handleReceiveMessage","sender_user_id","owner_user_id","withNewMessage","handleRemoveConversation","handleRemoveConversationCancel","handleRemoveConvesationConfirm","destroy","res","newConversations","filter","handleChatBottomRef","el","chatBottomEl","behavior","scrollIntoView","handleShowPartnerProfile","handleLeavePartnerProfile","PartnerComponent","chatPartnerComponent","conversationsComponent","activeConversationMessagesComponent","name","handler","Component","mapStateToProps","auth","userId"],"sources":["/home/zakaisoftstudios/Desktop/railsprojects/pimenta-group/pimenta-group-nextstep_frontend_react-28a5c2a2a4fe/src/containers/Chat/Chat.js"],"sourcesContent":["import React from 'react'\nimport * as ConversationsAPI from '../../services/api/conversations'\nimport * as ChatNotificationsAPI from '../../services/api/chatNotifications'\nimport Chat from '../../atomic/organisms/Chat'\nimport ChatConversations from '../../atomic/organisms/ChatConversations'\nimport ChatMessages from '../../atomic/organisms/ChatMessages'\nimport * as MessagesAPI from '../../services/api/messages'\nimport { connect } from 'react-redux'\nimport { profileTypes } from '../../constants/profileTypes'\nimport ActionModal from '../../atomic/molecules/ActionModal'\nimport { Trans } from '@lingui/macro'\n\nclass ChatContainer extends React.Component {\n  state = {\n    conversations: [],\n    loading: true,\n    loadingMessages: false,\n    activeConversation: null,\n    newMessage: '',\n    conversationToRemove: null,\n    confirmRemove: false,\n    partnerProfileToShow: null\n  }\n\n  async componentDidMount() {\n    const backendResource = this.getBackendResource()\n    const conversations = await ConversationsAPI.getAll(backendResource)\n\n    ChatNotificationsAPI.destroy()\n    if (!conversations.error) this.setState({ conversations, loading: false })\n  }\n\n  getBackendResource = () => {\n    const profileType = this.props.profileType\n    return profileTypes[profileType].backendResource\n  }\n\n  handleCloseConversation = () => {\n    this.setState({ activeConversation: null })\n  }\n\n  handleOpenConversation = conversationId => async () => {\n    this.setState({ loadingMessages: true })\n\n    const activeConversation = this.state.conversations.find(\n      conversation => conversation.id === conversationId\n    )\n\n    const backendResource = this.getBackendResource()\n    const messages = await MessagesAPI.getAll(conversationId, backendResource)\n\n    this.setState(\n      {\n        activeConversation: {\n          ...activeConversation,\n          messages\n        },\n        loadingMessages: false\n      },\n      () => this.scrollToChatBottom()\n    )\n  }\n\n  handleTypeMessage = event => {\n    this.setState({ newMessage: event.currentTarget.value })\n  }\n\n  handleSendMessage = async () => {\n    const {\n      newMessage,\n      activeConversation: { id: conversationId }\n    } = this.state\n\n    if (newMessage.length === 0) return\n\n    const message = await MessagesAPI.post(conversationId, newMessage)\n\n    if (!message.error) this.addMessage(message)\n  }\n\n  handleReceiveMessage = newMessage => {\n    if (\n      newMessage.sender_user_id !== this.state.activeConversation.owner_user_id\n    )\n      this.addMessage(newMessage)\n  }\n\n  addMessage = newMessage => {\n    const { activeConversation, conversations } = this.state\n\n    const withNewMessage = {\n      ...activeConversation,\n      messages: [...activeConversation.messages, newMessage]\n    }\n\n    this.setState(\n      {\n        activeConversation: withNewMessage,\n        newMessage: ''\n      },\n      () => this.scrollToChatBottom('smooth')\n    )\n  }\n\n  handleRemoveConversation = conversationToRemove => () =>\n    this.setState({\n      conversationToRemove,\n      confirmRemove: true\n    })\n\n  handleRemoveConversationCancel = () =>\n    this.setState({\n      conversationToRemove: null,\n      confirmRemove: false\n    })\n\n  handleRemoveConvesationConfirm = async () => {\n    const { conversationToRemove, conversations } = this.state\n    const backendResource = this.getBackendResource()\n\n    this.setState({ confirmRemove: false })\n\n    const res = await ConversationsAPI.destroy(\n      conversationToRemove.id,\n      backendResource\n    )\n\n    const newConversations = conversations.filter(\n      conversation => conversation.id !== conversationToRemove.id\n    )\n\n    this.setState({ conversations: newConversations })\n  }\n\n  handleChatBottomRef = el => (this.chatBottomEl = el)\n\n  scrollToChatBottom = behavior => {\n    this.chatBottomEl.scrollIntoView({ behavior })\n  }\n\n  handleShowPartnerProfile = partnerProfileToShow => () => {\n    this.setState({ partnerProfileToShow })\n  }\n\n  handleLeavePartnerProfile = () =>\n    this.setState({ partnerProfileToShow: null })\n\n  render() {\n    const {\n      loading,\n      loadingMessages,\n      conversations,\n      activeConversation,\n      newMessage,\n      confirmRemove,\n      partnerProfileToShow\n    } = this.state\n\n    if (partnerProfileToShow) {\n      const profileType = this.props.profileType\n      const PartnerComponent = profileTypes[profileType].chatPartnerComponent\n\n      return (\n        <PartnerComponent\n          profile={partnerProfileToShow}\n          ready={true}\n          canEdit={false}\n          handleReturn={this.handleLeavePartnerProfile}\n        />\n      )\n    }\n\n    const conversationsComponent = (\n      <ChatConversations\n        conversations={conversations}\n        handleOpenConversation={this.handleOpenConversation}\n        handleRemoveConversation={this.handleRemoveConversation}\n      />\n    )\n\n    const activeConversationMessagesComponent = (\n      <ChatMessages\n        conversation={activeConversation}\n        loadingMessages={loadingMessages}\n        newMessage={newMessage}\n        handleTypeMessage={this.handleTypeMessage}\n        handleSendMessage={this.handleSendMessage}\n        handleReceiveMessage={this.handleReceiveMessage}\n        handleChatBottomRef={this.handleChatBottomRef}\n        handleReturn={this.handleCloseConversation}\n        handleShowPartnerProfile={this.handleShowPartnerProfile}\n      />\n    )\n\n    return (\n      <React.Fragment>\n        {confirmRemove && (\n          <ActionModal\n            handleClose={this.handleRemoveConversationCancel}\n            content={\n              <div>\n                <Trans>\n                  Do you want to remove the conversation? The match will be\n                  undone and all the likes and hunts between the party will be\n                  removed.\n                </Trans>\n              </div>\n            }\n            actions={[\n              {\n                name: <Trans>Confirm</Trans>,\n                handler: this.handleRemoveConvesationConfirm\n              }\n            ]}\n          />\n        )}\n\n        <Chat\n          loading={loading}\n          loadingMessages={loadingMessages}\n          activeConversation={activeConversation}\n          conversationsComponent={conversationsComponent}\n          activeConversationMessagesComponent={\n            activeConversationMessagesComponent\n          }\n          hasConversations={conversations.length > 0}\n        />\n      </React.Fragment>\n    )\n  }\n}\n\nconst mapStateToProps = ({ auth: { userId, profileType } }) => ({\n  userId,\n  profileType\n})\n\nexport default connect(mapStateToProps)(ChatContainer)\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}