{"ast":null,"code":"\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nexports.__esModule = true;\nexports.default = void 0;\nvar _objectWithoutPropertiesLoose2 = _interopRequireDefault(require(\"@babel/runtime/helpers/objectWithoutPropertiesLoose\"));\nvar _isSchema = _interopRequireDefault(require(\"./util/isSchema\"));\nvar Lazy = /*#__PURE__*/\nfunction () {\n  function Lazy(mapFn) {\n    this._resolve = function () {\n      var schema = mapFn.apply(void 0, arguments);\n      if (!(0, _isSchema.default)(schema)) throw new TypeError('lazy() functions must return a valid schema');\n      return schema;\n    };\n  }\n  var _proto = Lazy.prototype;\n  _proto.resolve = function resolve(_ref) {\n    var value = _ref.value,\n      rest = (0, _objectWithoutPropertiesLoose2.default)(_ref, [\"value\"]);\n    return this._resolve(value, rest);\n  };\n  _proto.cast = function cast(value, options) {\n    return this._resolve(value, options).cast(value, options);\n  };\n  _proto.validate = function validate(value, options) {\n    return this._resolve(value, options).validate(value, options);\n  };\n  return Lazy;\n}();\nLazy.prototype.__isYupSchema__ = true;\nvar _default = Lazy;\nexports.default = _default;\nmodule.exports = exports[\"default\"];","map":null,"metadata":{},"sourceType":"script"}