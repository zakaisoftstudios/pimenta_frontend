{"ast":null,"code":"import _objectSpread from \"/home/zakaisoftstudios/Desktop/railsprojects/pimenta-group/pimenta-group-nextstep_frontend_react-28a5c2a2a4fe/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nexport var handleCorrectDate = function handleCorrectDate(start) {\n  var date = new Date(start);\n  return new Date(date.getTime() - new Date().getTimezoneOffset() * 60 * 1000 * 2).toLocaleDateString(\"en-US\");\n};\nexport var handleDateBeforeCreate = function handleDateBeforeCreate(element) {\n  if (element['start']) var start = increaseDate(element['start']);\n  if (element['start_date']) var start_date = increaseDate(element['start_date']);\n  if (element['start_dates']) var start_date = increaseDates(element['start_dates']);\n  if (element['end_date']) var end_date = increaseDate(element['end_date']);\n  return end_date ? _objectSpread(_objectSpread({}, element), {}, {\n    start: start,\n    end_date: end_date\n  }) : _objectSpread(_objectSpread({}, element), {}, {\n    start_date: start_date\n  });\n};\nvar increaseDate = function increaseDate(date) {\n  var date = new Date(date);\n  return new Date(date.getTime() + Math.abs(date.getTimezoneOffset() * 600000));\n};\nvar increaseDates = function increaseDates(dates) {\n  dates.map(function (date) {\n    increaseDate(date);\n  });\n};","map":{"version":3,"names":["handleCorrectDate","start","date","Date","getTime","getTimezoneOffset","toLocaleDateString","handleDateBeforeCreate","element","increaseDate","start_date","increaseDates","end_date","Math","abs","dates","map"],"sources":["/home/zakaisoftstudios/Desktop/railsprojects/pimenta-group/pimenta-group-nextstep_frontend_react-28a5c2a2a4fe/src/services/util/handleDate.js"],"sourcesContent":["export const handleCorrectDate = (start) => {\r\n  var date = new Date(start)\r\n  return (\r\n    new Date(date.getTime() - new Date().getTimezoneOffset()*60*1000*2).toLocaleDateString(\"en-US\")\r\n  )\r\n}\r\n\r\nexport const handleDateBeforeCreate = (element) => {\r\n  if (element['start']) var start = increaseDate(element['start'])\r\n  if (element['start_date']) var start_date = increaseDate(element['start_date'])\r\n  if (element['start_dates']) var start_date = increaseDates(element['start_dates'])\r\n  if (element['end_date']) var end_date = increaseDate(element['end_date'])\r\n  return (\r\n    (end_date) ? {...element, start, end_date } : {...element, start_date }\r\n  )\r\n}\r\n\r\nconst increaseDate = (date) => {\r\n  var date = new Date(date)\r\n  return (\r\n    new Date(date.getTime() + Math.abs(date.getTimezoneOffset()*600000))\r\n  )\r\n}\r\n\r\nconst increaseDates = (dates) => {\r\n  dates.map((date) => {\r\n    increaseDate(date);\r\n  })\r\n}\r\n"],"mappings":";AAAA,OAAO,IAAMA,iBAAiB,GAAG,SAApBA,iBAAiB,CAAIC,KAAK,EAAK;EAC1C,IAAIC,IAAI,GAAG,IAAIC,IAAI,CAACF,KAAK,CAAC;EAC1B,OACE,IAAIE,IAAI,CAACD,IAAI,CAACE,OAAO,EAAE,GAAG,IAAID,IAAI,EAAE,CAACE,iBAAiB,EAAE,GAAC,EAAE,GAAC,IAAI,GAAC,CAAC,CAAC,CAACC,kBAAkB,CAAC,OAAO,CAAC;AAEnG,CAAC;AAED,OAAO,IAAMC,sBAAsB,GAAG,SAAzBA,sBAAsB,CAAIC,OAAO,EAAK;EACjD,IAAIA,OAAO,CAAC,OAAO,CAAC,EAAE,IAAIP,KAAK,GAAGQ,YAAY,CAACD,OAAO,CAAC,OAAO,CAAC,CAAC;EAChE,IAAIA,OAAO,CAAC,YAAY,CAAC,EAAE,IAAIE,UAAU,GAAGD,YAAY,CAACD,OAAO,CAAC,YAAY,CAAC,CAAC;EAC/E,IAAIA,OAAO,CAAC,aAAa,CAAC,EAAE,IAAIE,UAAU,GAAGC,aAAa,CAACH,OAAO,CAAC,aAAa,CAAC,CAAC;EAClF,IAAIA,OAAO,CAAC,UAAU,CAAC,EAAE,IAAII,QAAQ,GAAGH,YAAY,CAACD,OAAO,CAAC,UAAU,CAAC,CAAC;EACzE,OACGI,QAAQ,mCAAQJ,OAAO;IAAEP,KAAK,EAALA,KAAK;IAAEW,QAAQ,EAARA;EAAQ,qCAASJ,OAAO;IAAEE,UAAU,EAAVA;EAAU,EAAE;AAE3E,CAAC;AAED,IAAMD,YAAY,GAAG,SAAfA,YAAY,CAAIP,IAAI,EAAK;EAC7B,IAAIA,IAAI,GAAG,IAAIC,IAAI,CAACD,IAAI,CAAC;EACzB,OACE,IAAIC,IAAI,CAACD,IAAI,CAACE,OAAO,EAAE,GAAGS,IAAI,CAACC,GAAG,CAACZ,IAAI,CAACG,iBAAiB,EAAE,GAAC,MAAM,CAAC,CAAC;AAExE,CAAC;AAED,IAAMM,aAAa,GAAG,SAAhBA,aAAa,CAAII,KAAK,EAAK;EAC/BA,KAAK,CAACC,GAAG,CAAC,UAACd,IAAI,EAAK;IAClBO,YAAY,CAACP,IAAI,CAAC;EACpB,CAAC,CAAC;AACJ,CAAC"},"metadata":{},"sourceType":"module"}