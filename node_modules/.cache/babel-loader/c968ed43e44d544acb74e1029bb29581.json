{"ast":null,"code":"var isType = require('./isType');\nvar getFunctionName = require('./getFunctionName');\nvar assert = require('./assert');\nvar stringify = require('./stringify');\n\n// creates an instance of a type, handling the optional new operator\nmodule.exports = function create(type, value, path) {\n  if (isType(type)) {\n    return !type.meta.identity && typeof value === 'object' && value !== null ? new type(value, path) : type(value, path);\n  }\n  if (process.env.NODE_ENV !== 'production') {\n    // here type should be a class constructor and value some instance, just check membership and return the value\n    path = path || [getFunctionName(type)];\n    assert(value instanceof type, function () {\n      return 'Invalid value ' + stringify(value) + ' supplied to ' + path.join('/');\n    });\n  }\n  return value;\n};","map":null,"metadata":{},"sourceType":"script"}