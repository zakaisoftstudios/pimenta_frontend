{"ast":null,"code":"\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nexports.__esModule = true;\nexports.default = ValidationError;\nvar _printValue = _interopRequireDefault(require(\"./util/printValue\"));\nvar strReg = /\\$\\{\\s*(\\w+)\\s*\\}/g;\nvar replace = function replace(str) {\n  return function (params) {\n    return str.replace(strReg, function (_, key) {\n      return (0, _printValue.default)(params[key]);\n    });\n  };\n};\nfunction ValidationError(errors, value, field, type) {\n  var _this = this;\n  this.name = 'ValidationError';\n  this.value = value;\n  this.path = field;\n  this.type = type;\n  this.errors = [];\n  this.inner = [];\n  if (errors) [].concat(errors).forEach(function (err) {\n    _this.errors = _this.errors.concat(err.errors || err);\n    if (err.inner) _this.inner = _this.inner.concat(err.inner.length ? err.inner : err);\n  });\n  this.message = this.errors.length > 1 ? this.errors.length + \" errors occurred\" : this.errors[0];\n  if (Error.captureStackTrace) Error.captureStackTrace(this, ValidationError);\n}\nValidationError.prototype = Object.create(Error.prototype);\nValidationError.prototype.constructor = ValidationError;\nValidationError.isError = function (err) {\n  return err && err.name === 'ValidationError';\n};\nValidationError.formatError = function (message, params) {\n  if (typeof message === 'string') message = replace(message);\n  var fn = function fn(params) {\n    params.path = params.label || params.path || 'this';\n    return typeof message === 'function' ? message(params) : message;\n  };\n  return arguments.length === 1 ? fn : fn(params);\n};\nmodule.exports = exports[\"default\"];","map":null,"metadata":{},"sourceType":"script"}