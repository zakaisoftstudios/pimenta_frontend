{"ast":null,"code":"import _classCallCheck from \"/home/zakaisoftstudios/Desktop/railsprojects/pimenta-group/pimenta-group-nextstep_frontend_react-28a5c2a2a4fe/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/zakaisoftstudios/Desktop/railsprojects/pimenta-group/pimenta-group-nextstep_frontend_react-28a5c2a2a4fe/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"/home/zakaisoftstudios/Desktop/railsprojects/pimenta-group/pimenta-group-nextstep_frontend_react-28a5c2a2a4fe/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _createSuper from \"/home/zakaisoftstudios/Desktop/railsprojects/pimenta-group/pimenta-group-nextstep_frontend_react-28a5c2a2a4fe/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";\nvar _jsxFileName = \"/home/zakaisoftstudios/Desktop/railsprojects/pimenta-group/pimenta-group-nextstep_frontend_react-28a5c2a2a4fe/src/containers/HeaderMenu.js\";\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { ActionCable } from 'react-actioncable-provider';\nimport { updateChatNotificationsCount as _updateChatNotificationsCount } from '../actions/notification';\nimport HeaderMenu from '../atomic/molecules/HeaderMenu';\nimport { profileTypes } from '../constants/profileTypes';\nvar HeaderMenuContainer = /*#__PURE__*/function (_React$Component) {\n  _inherits(HeaderMenuContainer, _React$Component);\n  var _super = _createSuper(HeaderMenuContainer);\n  function HeaderMenuContainer() {\n    var _this;\n    _classCallCheck(this, HeaderMenuContainer);\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n    _this = _super.call.apply(_super, [this].concat(args));\n    _this.state = {\n      activeItem: 'public'\n    };\n    _this.handleItemClick = function (name) {\n      return function () {\n        return _this.setState({\n          activeItem: name\n        });\n      };\n    };\n    _this.handleChatNotificationReceived = function (_ref) {\n      var count = _ref.count;\n      _this.props.updateChatNotificationsCount(count);\n    };\n    return _this;\n  }\n  _createClass(HeaderMenuContainer, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var path = window.location.pathname;\n      var activeMenuItem = profileTypes[this.props.profileType].menuItems.find(function (menuItem) {\n        return menuItem.path === path;\n      });\n      if (activeMenuItem) this.setState({\n        activeItem: activeMenuItem.name\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var activeItem = this.state.activeItem;\n      var chatNotificationsCount = this.props.chatNotificationsCount;\n      var profileType = this.props.profileType;\n      return /*#__PURE__*/React.createElement(React.Fragment, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 7\n        }\n      }, /*#__PURE__*/React.createElement(HeaderMenu, {\n        handleItemClick: this.handleItemClick,\n        activeItem: activeItem,\n        profileType: profileType,\n        chatNotificationsCount: chatNotificationsCount,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 9\n        }\n      }), /*#__PURE__*/React.createElement(ActionCable, {\n        channel: {\n          channel: 'ChatNotificationsChannel'\n        },\n        onReceived: this.handleChatNotificationReceived,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 9\n        }\n      }));\n    }\n  }]);\n  return HeaderMenuContainer;\n}(React.Component);\nHeaderMenuContainer.propTypes = {\n  visible: PropTypes.bool.isRequired,\n  profileType: PropTypes.string.isRequired\n};\nvar mapStateToProps = function mapStateToProps(_ref2) {\n  var visible = _ref2.mobileMenu.visible,\n    profileType = _ref2.auth.profileType,\n    chatNotificationsCount = _ref2.notification.chatNotificationsCount;\n  return {\n    visible: visible,\n    profileType: profileType,\n    chatNotificationsCount: chatNotificationsCount\n  };\n};\nvar mapDispatchToProps = function mapDispatchToProps(dispatch) {\n  return {\n    updateChatNotificationsCount: function updateChatNotificationsCount(count) {\n      return dispatch(_updateChatNotificationsCount({\n        count: count\n      }));\n    }\n  };\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(HeaderMenuContainer);","map":{"version":3,"names":["React","connect","PropTypes","ActionCable","updateChatNotificationsCount","HeaderMenu","profileTypes","HeaderMenuContainer","state","activeItem","handleItemClick","name","setState","handleChatNotificationReceived","count","props","path","window","location","pathname","activeMenuItem","profileType","menuItems","find","menuItem","chatNotificationsCount","channel","Component","propTypes","visible","bool","isRequired","string","mapStateToProps","mobileMenu","auth","notification","mapDispatchToProps","dispatch"],"sources":["/home/zakaisoftstudios/Desktop/railsprojects/pimenta-group/pimenta-group-nextstep_frontend_react-28a5c2a2a4fe/src/containers/HeaderMenu.js"],"sourcesContent":["import React from 'react'\nimport { connect } from 'react-redux'\nimport PropTypes from 'prop-types'\nimport { ActionCable } from 'react-actioncable-provider'\nimport { updateChatNotificationsCount } from '../actions/notification'\nimport HeaderMenu from '../atomic/molecules/HeaderMenu'\nimport { profileTypes } from '../constants/profileTypes'\n\nclass HeaderMenuContainer extends React.Component {\n  state = { activeItem: 'public' }\n\n  componentDidMount() {\n    const path = window.location.pathname\n    const activeMenuItem = profileTypes[this.props.profileType].menuItems.find(\n      menuItem => menuItem.path === path\n    )\n    if (activeMenuItem) this.setState({ activeItem: activeMenuItem.name })\n  }\n\n  handleItemClick = name => () => this.setState({ activeItem: name })\n\n  handleChatNotificationReceived = ({ count }) => {\n    this.props.updateChatNotificationsCount(count)\n  }\n\n  render() {\n    const { activeItem } = this.state\n    const { chatNotificationsCount } = this.props\n\n    const { profileType } = this.props\n\n    return (\n      <React.Fragment>\n        <HeaderMenu\n          handleItemClick={this.handleItemClick}\n          activeItem={activeItem}\n          profileType={profileType}\n          chatNotificationsCount={chatNotificationsCount}\n        />\n\n        <ActionCable\n          channel={{\n            channel: 'ChatNotificationsChannel'\n          }}\n          onReceived={this.handleChatNotificationReceived}\n        />\n      </React.Fragment>\n    )\n  }\n}\n\nHeaderMenuContainer.propTypes = {\n  visible: PropTypes.bool.isRequired,\n  profileType: PropTypes.string.isRequired\n}\n\nconst mapStateToProps = ({\n  mobileMenu: { visible },\n  auth: { profileType },\n  notification: { chatNotificationsCount }\n}) => ({\n  visible,\n  profileType,\n  chatNotificationsCount\n})\n\nconst mapDispatchToProps = dispatch => ({\n  updateChatNotificationsCount: count =>\n    dispatch(updateChatNotificationsCount({ count }))\n})\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(HeaderMenuContainer)\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}