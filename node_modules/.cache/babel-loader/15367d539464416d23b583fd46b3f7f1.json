{"ast":null,"code":"\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nexports.__esModule = true;\nexports.addMethod = addMethod;\nexports.lazy = exports.ref = exports.boolean = void 0;\nvar _mixed = _interopRequireDefault(require(\"./mixed\"));\nexports.mixed = _mixed.default;\nvar _boolean = _interopRequireDefault(require(\"./boolean\"));\nexports.bool = _boolean.default;\nvar _string = _interopRequireDefault(require(\"./string\"));\nexports.string = _string.default;\nvar _number = _interopRequireDefault(require(\"./number\"));\nexports.number = _number.default;\nvar _date = _interopRequireDefault(require(\"./date\"));\nexports.date = _date.default;\nvar _object = _interopRequireDefault(require(\"./object\"));\nexports.object = _object.default;\nvar _array = _interopRequireDefault(require(\"./array\"));\nexports.array = _array.default;\nvar _Reference = _interopRequireDefault(require(\"./Reference\"));\nvar _Lazy = _interopRequireDefault(require(\"./Lazy\"));\nvar _ValidationError = _interopRequireDefault(require(\"./ValidationError\"));\nexports.ValidationError = _ValidationError.default;\nvar _reach = _interopRequireDefault(require(\"./util/reach\"));\nexports.reach = _reach.default;\nvar _isSchema = _interopRequireDefault(require(\"./util/isSchema\"));\nexports.isSchema = _isSchema.default;\nvar _setLocale = _interopRequireDefault(require(\"./setLocale\"));\nexports.setLocale = _setLocale.default;\nvar boolean = _boolean.default;\nexports.boolean = boolean;\nvar ref = function ref(key, options) {\n  return new _Reference.default(key, options);\n};\nexports.ref = ref;\nvar lazy = function lazy(fn) {\n  return new _Lazy.default(fn);\n};\nexports.lazy = lazy;\nfunction addMethod(schemaType, name, fn) {\n  if (!schemaType || !(0, _isSchema.default)(schemaType.prototype)) throw new TypeError('You must provide a yup schema constructor function');\n  if (typeof name !== 'string') throw new TypeError('A Method name must be provided');\n  if (typeof fn !== 'function') throw new TypeError('Method function must be provided');\n  schemaType.prototype[name] = fn;\n}","map":null,"metadata":{},"sourceType":"script"}