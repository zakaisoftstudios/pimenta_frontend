{"ast":null,"code":"import _objectWithoutProperties from \"/home/zakaisoftstudios/Desktop/railsprojects/pimenta-group/pimenta-group-nextstep_frontend_react-28a5c2a2a4fe/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties\";\nvar _excluded = [\"component\", \"template\", \"allowedRoles\", \"authenticated\", \"profileType\", \"profileComplete\"];\nvar _this = this,\n  _jsxFileName = \"/home/zakaisoftstudios/Desktop/railsprojects/pimenta-group/pimenta-group-nextstep_frontend_react-28a5c2a2a4fe/src/containers/PrivateRoute.js\";\nimport React from 'react';\nimport { Route, Redirect } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { profileTypes } from '../constants/profileTypes';\nvar PrivateRoute = function PrivateRoute(_ref) {\n  var component = _ref.component,\n    template = _ref.template,\n    allowedRoles = _ref.allowedRoles,\n    authenticated = _ref.authenticated,\n    profileType = _ref.profileType,\n    profileComplete = _ref.profileComplete,\n    rest = _objectWithoutProperties(_ref, _excluded);\n  return /*#__PURE__*/React.createElement(Route, Object.assign({}, rest, {\n    render: function render(props) {\n      if (authorized(authenticated, allowedRoles, profileType)) {\n        return /*#__PURE__*/React.createElement(RouteRender, {\n          routeProps: props,\n          profileComplete: profileComplete,\n          template: template,\n          component: component,\n          profileType: profileType,\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 21,\n            columnNumber: 11\n          }\n        });\n      } else {\n        return /*#__PURE__*/React.createElement(Redirect, {\n          to: {\n            pathname: '/login',\n            state: {\n              from: props.location\n            }\n          },\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 31,\n            columnNumber: 11\n          }\n        });\n      }\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 3\n    }\n  }));\n};\nvar RouteRender = function RouteRender(_ref2) {\n  var Component = _ref2.component,\n    _ref2$template = _ref2.template,\n    Template = _ref2$template === void 0 ? null : _ref2$template,\n    routeProps = _ref2.routeProps,\n    profileComplete = _ref2.profileComplete,\n    profileType = _ref2.profileType;\n  if (forceProfileCompletion(profileComplete, profileType, routeProps)) {\n    return /*#__PURE__*/React.createElement(Redirect, {\n      to: {\n        pathname: profileTypes[profileType].editProfileUrl,\n        state: {\n          from: routeProps.location\n        }\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 7\n      }\n    });\n  } else {\n    return Template ? /*#__PURE__*/React.createElement(Template, {\n      routeProps: routeProps,\n      component: Component,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 7\n      }\n    }) : /*#__PURE__*/React.createElement(Component, Object.assign({}, routeProps, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 7\n      }\n    }));\n  }\n};\nvar authorized = function authorized(authenticated, allowedRoles, profileType) {\n  return authenticated === true && allowedRoles.includes(profileType);\n};\nvar forceProfileCompletion = function forceProfileCompletion(profileComplete, profileType, routeProps) {\n  return profileComplete === false && routeProps.match.url !== profileTypes[profileType].editProfileUrl;\n};\nvar mapStateToProps = function mapStateToProps(_ref3) {\n  var _ref3$auth = _ref3.auth,\n    authenticated = _ref3$auth.authenticated,\n    profileType = _ref3$auth.profileType,\n    profileComplete = _ref3$auth.profileComplete;\n  return {\n    authenticated: authenticated,\n    profileType: profileType,\n    profileComplete: profileComplete\n  };\n};\nPrivateRoute.propTypes = {\n  authenticated: PropTypes.bool.isRequired,\n  profileType: PropTypes.string.isRequired,\n  component: PropTypes.func.isRequired,\n  template: PropTypes.func,\n  allowedRoles: PropTypes.array.isRequired\n};\nexport default connect(mapStateToProps, null)(PrivateRoute);","map":{"version":3,"names":["React","Route","Redirect","connect","PropTypes","profileTypes","PrivateRoute","component","template","allowedRoles","authenticated","profileType","profileComplete","rest","props","authorized","pathname","state","from","location","RouteRender","Component","Template","routeProps","forceProfileCompletion","editProfileUrl","includes","match","url","mapStateToProps","auth","propTypes","bool","isRequired","string","func","array"],"sources":["/home/zakaisoftstudios/Desktop/railsprojects/pimenta-group/pimenta-group-nextstep_frontend_react-28a5c2a2a4fe/src/containers/PrivateRoute.js"],"sourcesContent":["import React from 'react'\nimport { Route, Redirect } from 'react-router-dom'\nimport { connect } from 'react-redux'\nimport PropTypes from 'prop-types'\nimport { profileTypes } from '../constants/profileTypes'\n\nconst PrivateRoute = ({\n  component,\n  template,\n  allowedRoles,\n  authenticated,\n  profileType,\n  profileComplete,\n  ...rest\n}) => (\n  <Route\n    {...rest}\n    render={props => {\n      if (authorized(authenticated, allowedRoles, profileType)) {\n        return (\n          <RouteRender\n            routeProps={props}\n            profileComplete={profileComplete}\n            template={template}\n            component={component}\n            profileType={profileType}\n          />\n        )\n      } else {\n        return (\n          <Redirect\n            to={{\n              pathname: '/login',\n              state: { from: props.location }\n            }}\n          />\n        )\n      }\n    }}\n  />\n)\n\nconst RouteRender = ({\n  component: Component,\n  template: Template = null,\n  routeProps,\n  profileComplete,\n  profileType\n}) => {\n  if (forceProfileCompletion(profileComplete, profileType, routeProps)) {\n    return (\n      <Redirect\n        to={{\n          pathname: profileTypes[profileType].editProfileUrl,\n          state: { from: routeProps.location }\n        }}\n      />\n    )\n  } else {\n    return Template ? (\n      <Template routeProps={routeProps} component={Component} />\n    ) : (\n      <Component {...routeProps} />\n    )\n  }\n}\n\nconst authorized = (authenticated, allowedRoles, profileType) =>\n  authenticated === true && allowedRoles.includes(profileType)\n\nconst forceProfileCompletion = (profileComplete, profileType, routeProps) =>\n  profileComplete === false &&\n  routeProps.match.url !== profileTypes[profileType].editProfileUrl\n\nconst mapStateToProps = ({\n  auth: { authenticated, profileType, profileComplete }\n}) => ({\n  authenticated,\n  profileType,\n  profileComplete\n})\n\nPrivateRoute.propTypes = {\n  authenticated: PropTypes.bool.isRequired,\n  profileType: PropTypes.string.isRequired,\n  component: PropTypes.func.isRequired,\n  template: PropTypes.func,\n  allowedRoles: PropTypes.array.isRequired\n}\n\nexport default connect(\n  mapStateToProps,\n  null\n)(PrivateRoute)\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}