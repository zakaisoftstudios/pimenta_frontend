{"ast":null,"code":"\"use strict\";\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\nvar _extends2 = _interopRequireDefault(require(\"@babel/runtime/helpers/extends\"));\nvar _classCallCheck2 = _interopRequireDefault(require(\"@babel/runtime/helpers/classCallCheck\"));\nvar _createClass2 = _interopRequireDefault(require(\"@babel/runtime/helpers/createClass\"));\nvar _possibleConstructorReturn2 = _interopRequireDefault(require(\"@babel/runtime/helpers/possibleConstructorReturn\"));\nvar _getPrototypeOf2 = _interopRequireDefault(require(\"@babel/runtime/helpers/getPrototypeOf\"));\nvar _assertThisInitialized2 = _interopRequireDefault(require(\"@babel/runtime/helpers/assertThisInitialized\"));\nvar _inherits2 = _interopRequireDefault(require(\"@babel/runtime/helpers/inherits\"));\nvar _propTypes = _interopRequireDefault(require(\"prop-types\"));\nvar _react = _interopRequireWildcard(require(\"react\"));\nvar _classnames = _interopRequireDefault(require(\"classnames\"));\nvar _PopupButton = _interopRequireDefault(require(\"../popup/PopupButton\"));\nvar _VolumeBar = _interopRequireDefault(require(\"../volume-control/VolumeBar\"));\nvar propTypes = {\n  player: _propTypes[\"default\"].object,\n  actions: _propTypes[\"default\"].object,\n  vertical: _propTypes[\"default\"].bool,\n  className: _propTypes[\"default\"].string,\n  alwaysShowVolume: _propTypes[\"default\"].bool\n};\nvar defaultProps = {\n  vertical: false\n};\nvar VolumeMenuButton = /*#__PURE__*/\nfunction (_Component) {\n  (0, _inherits2[\"default\"])(VolumeMenuButton, _Component);\n  function VolumeMenuButton(props, context) {\n    var _this;\n    (0, _classCallCheck2[\"default\"])(this, VolumeMenuButton);\n    _this = (0, _possibleConstructorReturn2[\"default\"])(this, (0, _getPrototypeOf2[\"default\"])(VolumeMenuButton).call(this, props, context));\n    _this.state = {\n      active: false\n    };\n    _this.handleClick = _this.handleClick.bind((0, _assertThisInitialized2[\"default\"])(_this));\n    _this.handleFocus = _this.handleFocus.bind((0, _assertThisInitialized2[\"default\"])(_this));\n    _this.handleBlur = _this.handleBlur.bind((0, _assertThisInitialized2[\"default\"])(_this));\n    return _this;\n  }\n  (0, _createClass2[\"default\"])(VolumeMenuButton, [{\n    key: \"handleClick\",\n    value: function handleClick() {\n      var _this$props = this.props,\n        player = _this$props.player,\n        actions = _this$props.actions;\n      actions.mute(!player.muted);\n    }\n  }, {\n    key: \"handleFocus\",\n    value: function handleFocus() {\n      this.setState({\n        active: true\n      });\n    }\n  }, {\n    key: \"handleBlur\",\n    value: function handleBlur() {\n      this.setState({\n        active: false\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$props2 = this.props,\n        vertical = _this$props2.vertical,\n        player = _this$props2.player,\n        className = _this$props2.className;\n      var inline = !vertical;\n      var level = this.volumeLevel;\n      return _react[\"default\"].createElement(_PopupButton[\"default\"], {\n        className: (0, _classnames[\"default\"])(className, {\n          'video-react-volume-menu-button-vertical': vertical,\n          'video-react-volume-menu-button-horizontal': !vertical,\n          'video-react-vol-muted': player.muted,\n          'video-react-vol-0': level === 0 && !player.muted,\n          'video-react-vol-1': level === 1,\n          'video-react-vol-2': level === 2,\n          'video-react-vol-3': level === 3,\n          'video-react-slider-active': this.props.alwaysShowVolume || this.state.active,\n          'video-react-lock-showing': this.props.alwaysShowVolume || this.state.active\n        }, 'video-react-volume-menu-button'),\n        onClick: this.handleClick,\n        inline: inline\n      }, _react[\"default\"].createElement(_VolumeBar[\"default\"], (0, _extends2[\"default\"])({\n        onFocus: this.handleFocus,\n        onBlur: this.handleBlur\n      }, this.props)));\n    }\n  }, {\n    key: \"volumeLevel\",\n    get: function get() {\n      var _this$props$player = this.props.player,\n        volume = _this$props$player.volume,\n        muted = _this$props$player.muted;\n      var level = 3;\n      if (volume === 0 || muted) {\n        level = 0;\n      } else if (volume < 0.33) {\n        level = 1;\n      } else if (volume < 0.67) {\n        level = 2;\n      }\n      return level;\n    }\n  }]);\n  return VolumeMenuButton;\n}(_react.Component);\nVolumeMenuButton.propTypes = propTypes;\nVolumeMenuButton.defaultProps = defaultProps;\nVolumeMenuButton.displayName = 'VolumeMenuButton';\nvar _default = VolumeMenuButton;\nexports[\"default\"] = _default;","map":null,"metadata":{},"sourceType":"script"}