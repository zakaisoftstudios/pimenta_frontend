{"ast":null,"code":"\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nexports.__esModule = true;\nexports.default = sortFields;\nvar _has = _interopRequireDefault(require(\"lodash/has\"));\nvar _toposort = _interopRequireDefault(require(\"toposort\"));\nvar _propertyExpr = require(\"property-expr\");\nvar _Reference = _interopRequireDefault(require(\"../Reference\"));\nvar _isSchema = _interopRequireDefault(require(\"./isSchema\"));\nfunction sortFields(fields, excludes) {\n  if (excludes === void 0) {\n    excludes = [];\n  }\n  var edges = [],\n    nodes = [];\n  function addNode(depPath, key) {\n    var node = (0, _propertyExpr.split)(depPath)[0];\n    if (!~nodes.indexOf(node)) nodes.push(node);\n    if (!~excludes.indexOf(key + \"-\" + node)) edges.push([key, node]);\n  }\n  for (var key in fields) {\n    if ((0, _has.default)(fields, key)) {\n      var value = fields[key];\n      if (!~nodes.indexOf(key)) nodes.push(key);\n      if (_Reference.default.isRef(value) && !value.isContext) addNode(value.path, key);else if ((0, _isSchema.default)(value) && value._deps) value._deps.forEach(function (path) {\n        return addNode(path, key);\n      });\n    }\n  }\n  return _toposort.default.array(nodes, edges).reverse();\n}\nmodule.exports = exports[\"default\"];","map":null,"metadata":{},"sourceType":"script"}