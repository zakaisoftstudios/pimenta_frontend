{"ast":null,"code":"var assert = require('./assert');\nvar isString = require('./isString');\nvar isFunction = require('./isFunction');\nvar forbidNewOperator = require('./forbidNewOperator');\nmodule.exports = function irreducible(name, predicate) {\n  if (process.env.NODE_ENV !== 'production') {\n    assert(isString(name), function () {\n      return 'Invalid argument name ' + assert.stringify(name) + ' supplied to irreducible(name, predicate) (expected a string)';\n    });\n    assert(isFunction(predicate), 'Invalid argument predicate ' + assert.stringify(predicate) + ' supplied to irreducible(name, predicate) (expected a function)');\n  }\n  function Irreducible(value, path) {\n    if (process.env.NODE_ENV !== 'production') {\n      forbidNewOperator(this, Irreducible);\n      path = path || [name];\n      assert(predicate(value), function () {\n        return 'Invalid value ' + assert.stringify(value) + ' supplied to ' + path.join('/');\n      });\n    }\n    return value;\n  }\n  Irreducible.meta = {\n    kind: 'irreducible',\n    name: name,\n    predicate: predicate,\n    identity: true\n  };\n  Irreducible.displayName = name;\n  Irreducible.is = predicate;\n  return Irreducible;\n};","map":null,"metadata":{},"sourceType":"script"}