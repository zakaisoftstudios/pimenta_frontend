{"ast":null,"code":"\"use strict\";\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nexports.__esModule = true;\nexports.default = void 0;\nvar _extends2 = _interopRequireDefault(require(\"@babel/runtime/helpers/extends\"));\nvar _taggedTemplateLiteralLoose2 = _interopRequireDefault(require(\"@babel/runtime/helpers/taggedTemplateLiteralLoose\"));\nvar _inherits = _interopRequireDefault(require(\"./util/inherits\"));\nvar _isAbsent = _interopRequireDefault(require(\"./util/isAbsent\"));\nvar _isSchema = _interopRequireDefault(require(\"./util/isSchema\"));\nvar _makePath = _interopRequireDefault(require(\"./util/makePath\"));\nvar _printValue = _interopRequireDefault(require(\"./util/printValue\"));\nvar _mixed = _interopRequireDefault(require(\"./mixed\"));\nvar _locale = require(\"./locale\");\nvar _runValidations = _interopRequireWildcard(require(\"./util/runValidations\"));\nfunction _templateObject() {\n  var data = (0, _taggedTemplateLiteralLoose2.default)([\"\", \"[\", \"]\"]);\n  _templateObject = function _templateObject() {\n    return data;\n  };\n  return data;\n}\nvar hasLength = function hasLength(value) {\n  return !(0, _isAbsent.default)(value) && value.length > 0;\n};\nvar _default = ArraySchema;\nexports.default = _default;\nfunction ArraySchema(type) {\n  var _this = this;\n  if (!(this instanceof ArraySchema)) return new ArraySchema(type);\n  _mixed.default.call(this, {\n    type: 'array'\n  }); // `undefined` specifically means uninitialized, as opposed to\n  // \"no subtype\"\n\n  this._subType = undefined;\n  this.withMutation(function () {\n    _this.transform(function (values) {\n      if (typeof values === 'string') try {\n        values = JSON.parse(values);\n      } catch (err) {\n        values = null;\n      }\n      return this.isType(values) ? values : null;\n    });\n    if (type) _this.of(type);\n  });\n}\n(0, _inherits.default)(ArraySchema, _mixed.default, {\n  _typeCheck: function _typeCheck(v) {\n    return Array.isArray(v);\n  },\n  _cast: function _cast(_value, _opts) {\n    var _this2 = this;\n    var value = _mixed.default.prototype._cast.call(this, _value, _opts); //should ignore nulls here\n\n    if (!this._typeCheck(value) || !this._subType) return value;\n    return value.map(function (v) {\n      return _this2._subType.cast(v, _opts);\n    });\n  },\n  _validate: function _validate(_value, options) {\n    var _this3 = this;\n    if (options === void 0) {\n      options = {};\n    }\n    var errors = [];\n    var sync = options.sync;\n    var path = options.path;\n    var subType = this._subType;\n    var endEarly = this._option('abortEarly', options);\n    var recursive = this._option('recursive', options);\n    var originalValue = options.originalValue != null ? options.originalValue : _value;\n    return _mixed.default.prototype._validate.call(this, _value, options).catch((0, _runValidations.propagateErrors)(endEarly, errors)).then(function (value) {\n      if (!recursive || !subType || !_this3._typeCheck(value)) {\n        if (errors.length) throw errors[0];\n        return value;\n      }\n      originalValue = originalValue || value;\n      var validations = value.map(function (item, idx) {\n        var path = (0, _makePath.default)(_templateObject(), options.path, idx); // object._validate note for isStrict explanation\n\n        var innerOptions = (0, _extends2.default)({}, options, {\n          path: path,\n          strict: true,\n          parent: value,\n          originalValue: originalValue[idx]\n        });\n        if (subType.validate) return subType.validate(item, innerOptions);\n        return true;\n      });\n      return (0, _runValidations.default)({\n        sync: sync,\n        path: path,\n        value: value,\n        errors: errors,\n        endEarly: endEarly,\n        validations: validations\n      });\n    });\n  },\n  of: function of(schema) {\n    var next = this.clone();\n    if (schema !== false && !(0, _isSchema.default)(schema)) throw new TypeError('`array.of()` sub-schema must be a valid yup schema, or `false` to negate a current sub-schema. ' + 'not: ' + (0, _printValue.default)(schema));\n    next._subType = schema;\n    return next;\n  },\n  required: function required(message) {\n    if (message === void 0) {\n      message = _locale.mixed.required;\n    }\n    var next = _mixed.default.prototype.required.call(this, message);\n    return next.test({\n      message: message,\n      name: 'required',\n      test: hasLength\n    });\n  },\n  min: function min(_min, message) {\n    message = message || _locale.array.min;\n    return this.test({\n      message: message,\n      name: 'min',\n      exclusive: true,\n      params: {\n        min: _min\n      },\n      test: function test(value) {\n        return (0, _isAbsent.default)(value) || value.length >= this.resolve(_min);\n      }\n    });\n  },\n  max: function max(_max, message) {\n    message = message || _locale.array.max;\n    return this.test({\n      message: message,\n      name: 'max',\n      exclusive: true,\n      params: {\n        max: _max\n      },\n      test: function test(value) {\n        return (0, _isAbsent.default)(value) || value.length <= this.resolve(_max);\n      }\n    });\n  },\n  ensure: function ensure() {\n    return this.default(function () {\n      return [];\n    }).transform(function (val) {\n      return val === null ? [] : [].concat(val);\n    });\n  },\n  compact: function compact(rejector) {\n    var reject = !rejector ? function (v) {\n      return !!v;\n    } : function (v, i, a) {\n      return !rejector(v, i, a);\n    };\n    return this.transform(function (values) {\n      return values != null ? values.filter(reject) : values;\n    });\n  },\n  describe: function describe() {\n    var base = _mixed.default.prototype.describe.call(this);\n    if (this._subType) base.innerType = this._subType.describe();\n    return base;\n  }\n});\nmodule.exports = exports[\"default\"];","map":null,"metadata":{},"sourceType":"script"}