{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.isInsideTheEnabledArea = exports.evaluateDateProp = exports.getVisibleYears = exports.getVisibleDays = exports.getWeekdaysMin = exports.getArrayByBoundary = exports.daysInMonthCount = undefined;\nvar _moment = require('moment');\nvar _moment2 = _interopRequireDefault(_moment);\nvar _range = require('lodash/range');\nvar _range2 = _interopRequireDefault(_range);\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\nvar daysInMonthCount = exports.daysInMonthCount = function daysInMonthCount(month, year) {\n  return (0, _moment2.default)([year, month]).endOf('month').date();\n};\nvar getArrayByBoundary = exports.getArrayByBoundary = function getArrayByBoundary(start, end) {\n  return (0, _range2.default)(end - start).map(function (i) {\n    return i + start;\n  });\n};\nvar getWeekdaysMin = exports.getWeekdaysMin = function getWeekdaysMin() {\n  var offset = (0, _moment2.default)().localeData().firstDayOfWeek();\n  var weekdaysMin = _moment2.default.weekdaysMin();\n  (0, _range2.default)(offset).forEach(function () {\n    var firstDay = weekdaysMin.shift();\n    weekdaysMin.push(firstDay);\n  });\n  return weekdaysMin;\n};\nvar getVisibleDays = exports.getVisibleDays = function getVisibleDays(month, year) {\n  var offset = (0, _moment2.default)([year, month]).startOf('month').weekday();\n  var previousMonth = month === 0 ? 11 : month - 1;\n  var previousYear = month === 0 ? year - 1 : year;\n  var currentMonthLength = daysInMonthCount(month, year) + 1;\n  var previousMonthLength = daysInMonthCount(previousMonth, previousYear) + 1; // We need the last number too\n\n  var previous = getArrayByBoundary(previousMonthLength - offset, previousMonthLength);\n  var current = getArrayByBoundary(1, currentMonthLength);\n  var following = getArrayByBoundary(1, 43 - previous.length - current.length);\n  return {\n    startCurrent: previous.length,\n    endCurrent: previous.length + current.length - 1,\n    days: previous.concat(current).concat(following)\n  };\n};\nvar getVisibleYears = exports.getVisibleYears = function getVisibleYears(year) {\n  var startDecadeYear = parseInt(year / 10, 10) * 10;\n  var endDecadeYear = startDecadeYear + 9;\n  var previous = [startDecadeYear - 1];\n  var current = getArrayByBoundary(startDecadeYear, endDecadeYear + 1);\n  var following = [endDecadeYear + 1];\n  return {\n    startCurrent: previous.length,\n    endCurrent: previous.length + current.length - 1,\n    years: previous.concat(current).concat(following)\n  };\n};\nvar evaluateDateProp = exports.evaluateDateProp = function evaluateDateProp(props, propName, componentName) {\n  var dateProp = props[propName];\n  if (dateProp && typeof dateProp !== 'string' && !(dateProp instanceof Date) && !_moment2.default.isMoment(dateProp)) {\n    return new Error(propName + ' validation failed in ' + componentName);\n  }\n};\nvar isInsideTheEnabledArea = exports.isInsideTheEnabledArea = function isInsideTheEnabledArea(date, mode, minDate, maxDate) {\n  if (!minDate && !maxDate) {\n    return true;\n  }\n  var minDateMoment = typeof minDate === 'string' ? (0, _moment2.default)(minDate, _moment2.default.ISO_8601, true) : (0, _moment2.default)(minDate);\n  var maxDateMoment = typeof maxDate === 'string' ? (0, _moment2.default)(maxDate, _moment2.default.ISO_8601, true) : (0, _moment2.default)(maxDate);\n  var format = void 0;\n  switch (mode) {\n    case 'day':\n      format = 'YYYY/MM/DD';\n      break;\n    case 'month':\n      format = 'YYYY/MM';\n      break;\n    case 'year':\n      format = 'YYYY';\n      break;\n  }\n  return (!minDate || date.format(format) >= minDateMoment.format(format)) && (!maxDate || date.format(format) <= maxDateMoment.format(format));\n};","map":null,"metadata":{},"sourceType":"script"}