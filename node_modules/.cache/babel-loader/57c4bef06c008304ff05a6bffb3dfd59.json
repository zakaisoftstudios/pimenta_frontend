{"ast":null,"code":"\"use strict\";\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\nvar _objectSpread2 = _interopRequireDefault(require(\"@babel/runtime/helpers/objectSpread\"));\nvar _classCallCheck2 = _interopRequireDefault(require(\"@babel/runtime/helpers/classCallCheck\"));\nvar _createClass2 = _interopRequireDefault(require(\"@babel/runtime/helpers/createClass\"));\nvar _redux = require(\"redux\");\nvar _reducers = _interopRequireDefault(require(\"./reducers\"));\nvar playerActions = _interopRequireWildcard(require(\"./actions/player\"));\nvar videoActions = _interopRequireWildcard(require(\"./actions/video\"));\nvar Manager = /*#__PURE__*/\nfunction () {\n  function Manager(store) {\n    (0, _classCallCheck2[\"default\"])(this, Manager);\n    this.store = store || (0, _redux.createStore)(_reducers[\"default\"]);\n    this.video = null;\n    this.rootElement = null;\n  }\n  (0, _createClass2[\"default\"])(Manager, [{\n    key: \"getActions\",\n    value: function getActions() {\n      var manager = this;\n      var dispatch = this.store.dispatch;\n      var actions = (0, _objectSpread2[\"default\"])({}, playerActions, videoActions);\n      function bindActionCreator(actionCreator) {\n        return function bindAction() {\n          // eslint-disable-next-line prefer-rest-params\n          var action = actionCreator.apply(manager, arguments);\n          if (typeof action !== 'undefined') {\n            dispatch(action);\n          }\n        };\n      }\n      return Object.keys(actions).filter(function (key) {\n        return typeof actions[key] === 'function';\n      }).reduce(function (boundActions, key) {\n        boundActions[key] = bindActionCreator(actions[key]);\n        return boundActions;\n      }, {});\n    }\n  }, {\n    key: \"getState\",\n    value: function getState() {\n      return this.store.getState();\n    } // subscribe state change\n  }, {\n    key: \"subscribeToStateChange\",\n    value: function subscribeToStateChange(listener, getState) {\n      if (!getState) {\n        getState = this.getState.bind(this);\n      }\n      var prevState = getState();\n      var handleChange = function handleChange() {\n        var state = getState();\n        if (state === prevState) {\n          return;\n        }\n        var prevStateCopy = prevState;\n        prevState = state;\n        listener(state, prevStateCopy);\n      };\n      return this.store.subscribe(handleChange);\n    } // subscribe to operation state change\n  }, {\n    key: \"subscribeToOperationStateChange\",\n    value: function subscribeToOperationStateChange(listener) {\n      var _this = this;\n      return this.subscribeToStateChange(listener, function () {\n        return _this.getState().operation;\n      });\n    } // subscribe to player state change\n  }, {\n    key: \"subscribeToPlayerStateChange\",\n    value: function subscribeToPlayerStateChange(listener) {\n      var _this2 = this;\n      return this.subscribeToStateChange(listener, function () {\n        return _this2.getState().player;\n      });\n    }\n  }]);\n  return Manager;\n}();\nexports[\"default\"] = Manager;","map":null,"metadata":{},"sourceType":"script"}