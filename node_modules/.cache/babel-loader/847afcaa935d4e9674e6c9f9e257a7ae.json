{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\nfunction _interopDefault(ex) {\n  return ex && typeof ex === 'object' && 'default' in ex ? ex['default'] : ex;\n}\nvar _Object$getPrototypeOf = _interopDefault(require('babel-runtime/core-js/object/get-prototype-of'));\nvar _classCallCheck = _interopDefault(require('babel-runtime/helpers/classCallCheck'));\nvar _createClass = _interopDefault(require('babel-runtime/helpers/createClass'));\nvar _possibleConstructorReturn = _interopDefault(require('babel-runtime/helpers/possibleConstructorReturn'));\nvar _inherits = _interopDefault(require('babel-runtime/helpers/inherits'));\nvar React = require('react');\nvar PropTypes = _interopDefault(require('prop-types'));\nvar hashSum = _interopDefault(require('hash-sum'));\nvar core = require('@lingui/core');\nvar _extends = _interopDefault(require('babel-runtime/helpers/extends'));\nvar hoistStatics = _interopDefault(require('hoist-non-react-statics'));\nvar _getIterator = _interopDefault(require('babel-runtime/core-js/get-iterator'));\nvar _slicedToArray = _interopDefault(require('babel-runtime/helpers/slicedToArray'));\nvar _Object$keys = _interopDefault(require('babel-runtime/core-js/object/keys'));\nvar _toConsumableArray = _interopDefault(require('babel-runtime/helpers/toConsumableArray'));\nvar _objectWithoutProperties = _interopDefault(require('babel-runtime/helpers/objectWithoutProperties'));\n\n/*\n * I18nPublisher - Connects to lingui-i18n/I18n class\n * Allows listeners to subscribe for changes\n */\nfunction makeLinguiPublisher(i18n) {\n  var subscribers = [];\n  return {\n    i18n: i18n,\n    i18nHash: null,\n    getSubscribers: function getSubscribers() {\n      return subscribers;\n    },\n    subscribe: function subscribe(callback) {\n      subscribers.push(callback);\n    },\n    unsubscribe: function unsubscribe(callback) {\n      subscribers = subscribers.filter(function (cb) {\n        return cb !== callback;\n      });\n    },\n    update: function update() {\n      var params = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n      if (!params) return;\n      var catalogs = params.catalogs,\n        language = params.language,\n        locales = params.locales;\n      if (!catalogs && !language && !locales) return;\n      if (catalogs) i18n.load(catalogs);\n      if (language) i18n.activate(language, locales);\n      this.i18nHash = hashSum([i18n.language, i18n.messages]);\n      subscribers.forEach(function (f) {\n        return f();\n      });\n    }\n  };\n}\nvar I18nProvider = function (_React$Component) {\n  _inherits(I18nProvider, _React$Component);\n  function I18nProvider(props) {\n    _classCallCheck(this, I18nProvider);\n    var _this = _possibleConstructorReturn(this, (I18nProvider.__proto__ || _Object$getPrototypeOf(I18nProvider)).call(this, props));\n    var language = props.language,\n      locales = props.locales,\n      catalogs = props.catalogs,\n      missing = props.missing;\n    var i18n = props.i18n || core.setupI18n({\n      language: language,\n      locales: locales,\n      catalogs: catalogs\n    });\n    _this.linguiPublisher = makeLinguiPublisher(i18n);\n    _this.linguiPublisher.i18n._missing = _this.props.missing;\n    return _this;\n  }\n  _createClass(I18nProvider, [{\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate(prevProps) {\n      var _props = this.props,\n        language = _props.language,\n        locales = _props.locales,\n        catalogs = _props.catalogs;\n      if (language !== prevProps.language || locales !== prevProps.locales || catalogs !== prevProps.catalogs) {\n        this.linguiPublisher.update({\n          language: language,\n          catalogs: catalogs,\n          locales: locales\n        });\n      }\n      this.linguiPublisher.i18n._missing = this.props.missing;\n    }\n  }, {\n    key: \"getChildContext\",\n    value: function getChildContext() {\n      return {\n        linguiPublisher: this.linguiPublisher,\n        linguiDefaultRender: this.props.defaultRender\n      };\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return this.props.children || null;\n    }\n  }]);\n  return I18nProvider;\n}(React.Component);\nI18nProvider.defaultProps = {\n  defaultRender: null\n};\nI18nProvider.childContextTypes = {\n  linguiPublisher: PropTypes.object.isRequired,\n  linguiDefaultRender: PropTypes.any\n};\nvar I18n = function (_React$Component) {\n  _inherits(I18n, _React$Component);\n  function I18n() {\n    var _ref;\n    var _temp, _this, _ret;\n    _classCallCheck(this, I18n);\n    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n    return _ret = (_temp = (_this = _possibleConstructorReturn(this, (_ref = I18n.__proto__ || _Object$getPrototypeOf(I18n)).call.apply(_ref, [this].concat(args))), _this), _this.checkUpdate = /* istanbul ignore next */function () {\n      _this.forceUpdate();\n    }, _temp), _possibleConstructorReturn(_this, _ret);\n  }\n  _createClass(I18n, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _getI18n = this.getI18n(),\n        subscribe = _getI18n.subscribe;\n      if (this.props.update && subscribe) subscribe(this.checkUpdate);\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      var _getI18n2 = this.getI18n(),\n        unsubscribe = _getI18n2.unsubscribe;\n      if (this.props.update && unsubscribe) unsubscribe(this.checkUpdate);\n    }\n\n    // Test checks that subscribe/unsubscribe is called with function.\n  }, {\n    key: \"getI18n\",\n    value: function getI18n() {\n      return this.context.linguiPublisher || {};\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _props = this.props,\n        children = _props.children,\n        withHash = _props.withHash;\n      var _getI18n3 = this.getI18n(),\n        i18n = _getI18n3.i18n,\n        i18nHash = _getI18n3.i18nHash;\n      var props = _extends({\n        i18n: i18n\n      }, withHash ? {\n        i18nHash: i18nHash\n      } : {});\n      if (typeof children === \"function\") {\n        return children(props);\n      }\n      {\n        console.warn(\"I18n accepts only function as a children. \" + \"Other usecases are deprecated and will be removed in v3.0\");\n      }\n\n      // Deprecate v3.0\n      return React.isValidElement(children) ? React.cloneElement(children, props) : React.createElement(children, props);\n    }\n  }]);\n  return I18n;\n}(React.Component);\nI18n.defaultProps = {\n  update: true,\n  withHash: true\n};\nI18n.contextTypes = {\n  linguiPublisher: PropTypes.object\n};\nvar withI18n = function withI18n() {\n  var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  return function (WrappedComponent) {\n    {\n      if (typeof options === \"function\" || React.isValidElement(options)) {\n        console.warn(\"withI18n([options]) takes options as a first argument, \" + \"but received React component itself. Without options, the Component \" + \"should be wrapped as withI18n()(Component), not withI18n(Component).\");\n      }\n    }\n    var _options$update = options.update,\n      update = _options$update === undefined ? true : _options$update,\n      _options$withHash = options.withHash,\n      withHash = _options$withHash === undefined ? true : _options$withHash,\n      _options$withRef = options.withRef,\n      withRef = _options$withRef === undefined ? false : _options$withRef;\n    var WithI18n = function (_React$Component) {\n      _inherits(WithI18n, _React$Component);\n      function WithI18n() {\n        var _ref;\n        var _temp, _this, _ret;\n        _classCallCheck(this, WithI18n);\n        for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n          args[_key] = arguments[_key];\n        }\n        return _ret = (_temp = (_this = _possibleConstructorReturn(this, (_ref = WithI18n.__proto__ || _Object$getPrototypeOf(WithI18n)).call.apply(_ref, [this].concat(args))), _this), _this.wrappedInstance = null, _this.setWrappedInstance = function (ref) {\n          if (withRef) _this.wrappedInstance = ref;\n        }, _this.getWrappedInstance = function () {\n          if (!withRef) {\n            throw new Error(\"To access the wrapped instance, you need to specify { withRef: true }\" + \" in the options argument of the withI18n() call.\");\n          }\n          return _this.wrappedInstance;\n        }, _temp), _possibleConstructorReturn(_this, _ret);\n      }\n      _createClass(WithI18n, [{\n        key: \"render\",\n        value: function render() {\n          var props = _extends({}, this.props, withRef ? {\n            ref: this.setWrappedInstance\n          } : {});\n          return React.createElement(I18n, {\n            update: update,\n            withHash: withHash\n          }, function (_ref2) {\n            var i18n = _ref2.i18n,\n              i18nHash = _ref2.i18nHash;\n            return React.createElement(WrappedComponent, _extends({}, props, {\n              i18n: i18n,\n              i18nHash: i18nHash\n            }));\n          });\n        }\n      }]);\n      return WithI18n;\n    }(React.Component);\n    WithI18n.contextTypes = {\n      linguiPublisher: PropTypes.object\n    };\n    return hoistStatics(WithI18n, WrappedComponent);\n  };\n};\n\n// match <0>paired</0> and <1/> unpaired tags\nvar tagRe = /<(\\d+)>(.*?)<\\/\\1>|<(\\d+)\\/>/;\nvar nlRe = /(?:\\r\\n|\\r|\\n)/g;\n\n/**\n * `formatElements` - parse string and return tree of react elements\n *\n * `value` is string to be formatted with <0>Paired<0/> or <0/> (unpaired)\n * placeholders. `elements` is a array of react elements which indexes\n * correspond to element indexes in formatted string\n */\nfunction formatElements(value) {\n  var elements = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : [];\n\n  // TODO: warn if there're any unprocessed elements\n  // TODO: warn if element at `index` doesn't exist\n\n  var parts = value.replace(nlRe, \"\").split(tagRe);\n\n  // no inline elements, return\n  if (parts.length === 1) return value;\n  var tree = [];\n  var before = parts.shift();\n  if (before) tree.push(before);\n  var _iteratorNormalCompletion = true;\n  var _didIteratorError = false;\n  var _iteratorError = undefined;\n  try {\n    for (var _iterator = _getIterator(getElements(parts)), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n      var _ref = _step.value;\n      var _ref2 = _slicedToArray(_ref, 3);\n      var index = _ref2[0];\n      var children = _ref2[1];\n      var after = _ref2[2];\n      var element = elements[index];\n      tree.push(React.cloneElement(element, {\n        key: index\n      },\n      // format children for pair tags\n      // unpaired tags might have children if it's a component passed as a variable\n      children ? formatElements(children, elements) : element.props.children));\n      if (after) tree.push(after);\n    }\n  } catch (err) {\n    _didIteratorError = true;\n    _iteratorError = err;\n  } finally {\n    try {\n      if (!_iteratorNormalCompletion && _iterator.return) {\n        _iterator.return();\n      }\n    } finally {\n      if (_didIteratorError) {\n        throw _iteratorError;\n      }\n    }\n  }\n  return tree;\n}\n\n/*\n * `getElements` - return array of element indexes and element childrens\n *\n * `parts` is array of [pairedIndex, children, unpairedIndex, textAfter, ...]\n * where:\n * - `pairedIndex` is index of paired element (undef for unpaired)\n * - `children` are children of paired element (undef for unpaired)\n * - `unpairedIndex` is index of unpaired element (undef for paired)\n * - `textAfter` is string after all elements (empty string, if there's nothing)\n *\n * `parts` length is always multiply of 4\n *\n * Returns: Array<[elementIndex, children, after]>\n */\nfunction getElements(parts) {\n  if (!parts.length) return [];\n  var _parts$slice = parts.slice(0, 4),\n    _parts$slice2 = _slicedToArray(_parts$slice, 4),\n    paired = _parts$slice2[0],\n    children = _parts$slice2[1],\n    unpaired = _parts$slice2[2],\n    after = _parts$slice2[3];\n  return [[parseInt(paired || unpaired), children || \"\", after]].concat(getElements(parts.slice(4, parts.length)));\n}\nvar Render = function (_React$Component) {\n  _inherits(Render, _React$Component);\n  function Render() {\n    _classCallCheck(this, Render);\n    return _possibleConstructorReturn(this, (Render.__proto__ || _Object$getPrototypeOf(Render)).apply(this, arguments));\n  }\n  _createClass(Render, [{\n    key: \"render\",\n    value: function render() {\n      var _props = this.props,\n        className = _props.className,\n        value = _props.value;\n      var render = this.props.render || this.context.linguiDefaultRender;\n      if (render === null || render === undefined) {\n        return value || null;\n      } else if (typeof render === \"string\") {\n        // Built-in element: h1, p\n        return React.createElement(render, {\n          className: className\n        }, value);\n      }\n      return React.isValidElement(render) ?\n      // Custom element: <p className=\"lear' />\n      React.cloneElement(render, {}, value) :\n      // Custom component: ({ translation }) => <a title={translation}>x</a>\n      React.createElement(render, {\n        translation: value\n      });\n    }\n  }]);\n  return Render;\n}(React.Component);\nRender.contextTypes = {\n  linguiDefaultRender: PropTypes.any\n};\nvar Trans = function (_React$Component) {\n  _inherits(Trans, _React$Component);\n  function Trans() {\n    _classCallCheck(this, Trans);\n    return _possibleConstructorReturn(this, (Trans.__proto__ || _Object$getPrototypeOf(Trans)).apply(this, arguments));\n  }\n  _createClass(Trans, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      {\n        if (!this.getTranslation() && this.props.children) {\n          console.warn(\"@lingui/babel-preset-react is probably missing in babel config, \" + \"but you are using <Trans> component in a way which requires it. \" + \"Either don't use children in <Trans> component or configure babel \" + \"to load @lingui/babel-preset-react preset. See tutorial for more info: \" + \"https://l.lingui.io/tutorial-i18n-react\");\n        }\n      }\n    }\n  }, {\n    key: \"getTranslation\",\n    value: function getTranslation() {\n      var _props = this.props,\n        _props$id = _props.id,\n        id = _props$id === undefined ? \"\" : _props$id,\n        defaults = _props.defaults,\n        i18n = _props.i18n,\n        formats = _props.formats;\n      var values = _extends({}, this.props.values);\n      var components = this.props.components ? [].concat(_toConsumableArray(this.props.components)) : [];\n      if (values) {\n        /*\n        Related discussion: https://github.com/lingui/js-lingui/issues/183\n         Values *might* contain React elements with static content.\n        They're replaced with <INDEX /> placeholders and added to `components`.\n         Example:\n        Translation: Hello {name}\n        Values: { name: <strong>Jane</strong> }\n         It'll become \"Hello <0 />\" with components=[<strong>Jane</strong>]\n        */\n\n        _Object$keys(values).forEach(function (key) {\n          var value = values[key];\n          if (!React.isValidElement(value)) return;\n          var index = components.push(value) - 1; // push returns new length of array\n          values[key] = \"<\" + index + \"/>\";\n        });\n      }\n      var translation = i18n && typeof i18n._ === \"function\" ? i18n._(id, values, {\n        defaults: defaults,\n        formats: formats\n      }) : id; // i18n provider isn't loaded at all\n      if (!translation) return null;\n      return formatElements(translation, components);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(Render, {\n        render: this.props.render,\n        className: this.props.className,\n        value: this.getTranslation()\n      });\n    }\n  }]);\n  return Trans;\n}(React.Component);\nvar Trans$1 = withI18n()(Trans);\nvar Select = withI18n()(function (_React$Component) {\n  _inherits(Select, _React$Component);\n  function Select() {\n    _classCallCheck(this, Select);\n    return _possibleConstructorReturn(this, (Select.__proto__ || _Object$getPrototypeOf(Select)).apply(this, arguments));\n  }\n  _createClass(Select, [{\n    key: \"render\",\n    value: function render() {\n      // lingui-transform-js transforms also this file in react-native env.\n      // i18n must be aliased to _i18n to hide i18n.select call from plugin,\n      // otherwise it throws \"undefined is not iterable\" obscure error.\n      var _props = this.props,\n        className = _props.className,\n        render = _props.render,\n        _i18n = _props.i18n,\n        selectProps = _objectWithoutProperties(_props, [\"className\", \"render\", \"i18n\"]);\n      return React.createElement(Render, {\n        className: className,\n        render: render,\n        value: _i18n.select(selectProps)\n      });\n    }\n  }]);\n  return Select;\n}(React.Component));\nvar PluralFactory = function PluralFactory() {\n  var _class2, _temp2;\n  var ordinal = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;\n  var displayName = !ordinal ? \"Plural\" : \"SelectOrdinal\";\n  return _temp2 = _class2 = function (_React$Component2) {\n    _inherits(_class2, _React$Component2);\n    function _class2() {\n      var _ref;\n      var _temp, _this2, _ret;\n      _classCallCheck(this, _class2);\n      for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n        args[_key] = arguments[_key];\n      }\n      return _ret = (_temp = (_this2 = _possibleConstructorReturn(this, (_ref = _class2.__proto__ || _Object$getPrototypeOf(_class2)).call.apply(_ref, [this].concat(args))), _this2), _this2.displayName = displayName, _temp), _possibleConstructorReturn(_this2, _ret);\n    }\n    _createClass(_class2, [{\n      key: \"render\",\n      value: function render() {\n        var _props2 = this.props,\n          className = _props2.className,\n          render = _props2.render,\n          i18n = _props2.i18n,\n          value = _props2.value,\n          offset = _props2.offset,\n          props = _objectWithoutProperties(_props2, [\"className\", \"render\", \"i18n\", \"value\", \"offset\"]);\n        var getPluralValue = !ordinal ? i18n.plural : i18n.selectOrdinal;\n\n        // i18n.selectOrdinal/plural uses numbers for exact matches (1, 2),\n        // while SelectOrdinal/Plural has to use strings (_1, _2).\n        var pluralProps = _Object$keys(props).reduce(function (acc, prop) {\n          var key = prop.replace(\"_\", \"\");\n          acc[key] = props[prop];\n          return acc;\n        }, {\n          value: Number(value),\n          offset: Number(offset)\n        });\n        return React.createElement(Render, {\n          className: className,\n          render: render,\n          value: getPluralValue(pluralProps)\n        });\n      }\n    }]);\n    return _class2;\n  }(React.Component), _class2.defaultProps = {\n    offset: 0\n  }, _temp2;\n};\nvar Plural = withI18n()(PluralFactory(false));\nvar SelectOrdinal = withI18n()(PluralFactory(true));\nfunction createFormat(formatFunction) {\n  return function (_ref) {\n    var value = _ref.value,\n      format = _ref.format,\n      i18n = _ref.i18n,\n      className = _ref.className,\n      render = _ref.render;\n    var formatter = formatFunction(i18n.locales || i18n.language, format);\n    return React.createElement(Render, {\n      className: className,\n      render: render,\n      value: formatter(value)\n    });\n  };\n}\nvar DateFormat = withI18n()(createFormat(core.date));\nvar NumberFormat = withI18n()(createFormat(core.number));\nvar i18nMark = function i18nMark(id) {\n  return id;\n};\nexports.i18nMark = i18nMark;\nexports.withI18n = withI18n;\nexports.I18nProvider = I18nProvider;\nexports.I18n = I18n;\nexports.Trans = Trans$1;\nexports.Plural = Plural;\nexports.Select = Select;\nexports.SelectOrdinal = SelectOrdinal;\nexports.DateFormat = DateFormat;\nexports.NumberFormat = NumberFormat;","map":null,"metadata":{},"sourceType":"script"}