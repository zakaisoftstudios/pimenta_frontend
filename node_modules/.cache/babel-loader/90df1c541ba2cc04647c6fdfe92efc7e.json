{"ast":null,"code":"!function (t, i) {\n  \"object\" == typeof exports && \"undefined\" != typeof module ? module.exports = i() : \"function\" == typeof define && define.amd ? define(i) : (t = \"undefined\" != typeof globalThis ? globalThis : t || self).dayjs_plugin_utc = i();\n}(this, function () {\n  \"use strict\";\n\n  var t = \"minute\",\n    i = /[+-]\\d\\d(?::?\\d\\d)?/g,\n    e = /([+-]|\\d\\d)/g;\n  return function (s, f, n) {\n    var u = f.prototype;\n    n.utc = function (t) {\n      var i = {\n        date: t,\n        utc: !0,\n        args: arguments\n      };\n      return new f(i);\n    }, u.utc = function (i) {\n      var e = n(this.toDate(), {\n        locale: this.$L,\n        utc: !0\n      });\n      return i ? e.add(this.utcOffset(), t) : e;\n    }, u.local = function () {\n      return n(this.toDate(), {\n        locale: this.$L,\n        utc: !1\n      });\n    };\n    var o = u.parse;\n    u.parse = function (t) {\n      t.utc && (this.$u = !0), this.$utils().u(t.$offset) || (this.$offset = t.$offset), o.call(this, t);\n    };\n    var r = u.init;\n    u.init = function () {\n      if (this.$u) {\n        var t = this.$d;\n        this.$y = t.getUTCFullYear(), this.$M = t.getUTCMonth(), this.$D = t.getUTCDate(), this.$W = t.getUTCDay(), this.$H = t.getUTCHours(), this.$m = t.getUTCMinutes(), this.$s = t.getUTCSeconds(), this.$ms = t.getUTCMilliseconds();\n      } else r.call(this);\n    };\n    var a = u.utcOffset;\n    u.utcOffset = function (s, f) {\n      var n = this.$utils().u;\n      if (n(s)) return this.$u ? 0 : n(this.$offset) ? a.call(this) : this.$offset;\n      if (\"string\" == typeof s && (s = function (t) {\n        void 0 === t && (t = \"\");\n        var s = t.match(i);\n        if (!s) return null;\n        var f = (\"\" + s[0]).match(e) || [\"-\", 0, 0],\n          n = f[0],\n          u = 60 * +f[1] + +f[2];\n        return 0 === u ? 0 : \"+\" === n ? u : -u;\n      }(s), null === s)) return this;\n      var u = Math.abs(s) <= 16 ? 60 * s : s,\n        o = this;\n      if (f) return o.$offset = u, o.$u = 0 === s, o;\n      if (0 !== s) {\n        var r = this.$u ? this.toDate().getTimezoneOffset() : -1 * this.utcOffset();\n        (o = this.local().add(u + r, t)).$offset = u, o.$x.$localOffset = r;\n      } else o = this.utc();\n      return o;\n    };\n    var h = u.format;\n    u.format = function (t) {\n      var i = t || (this.$u ? \"YYYY-MM-DDTHH:mm:ss[Z]\" : \"\");\n      return h.call(this, i);\n    }, u.valueOf = function () {\n      var t = this.$utils().u(this.$offset) ? 0 : this.$offset + (this.$x.$localOffset || this.$d.getTimezoneOffset());\n      return this.$d.valueOf() - 6e4 * t;\n    }, u.isUTC = function () {\n      return !!this.$u;\n    }, u.toISOString = function () {\n      return this.toDate().toISOString();\n    }, u.toString = function () {\n      return this.toDate().toUTCString();\n    };\n    var l = u.toDate;\n    u.toDate = function (t) {\n      return \"s\" === t && this.$offset ? n(this.format(\"YYYY-MM-DD HH:mm:ss:SSS\")).toDate() : l.call(this);\n    };\n    var c = u.diff;\n    u.diff = function (t, i, e) {\n      if (t && this.$u === t.$u) return c.call(this, t, i, e);\n      var s = this.local(),\n        f = n(t).local();\n      return c.call(s, f, i, e);\n    };\n  };\n});","map":null,"metadata":{},"sourceType":"script"}